<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ES6/ES7 长啥样</title>
      <link href="/2021/06/26/es6-es7-chang-sha-yang/"/>
      <url>/2021/06/26/es6-es7-chang-sha-yang/</url>
      
        <content type="html"><![CDATA[<h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><p>A.使用Set处理数组去重和删除元素，Set是es6新增的一种数据结构，它和数组非常相似，但是成员的值都是唯一的，没有重复的值。提供4个语义化的API：<br>1.<code>add(value)</code>;添加某个值，返回Set结构本身。<br>2.<code>delete(value)</code>;删除某个值，返回一个布尔值，表示删除是否成功。<br>3.<code>has(value)</code>;返回一个布尔值，表示改值是否为Set的成员。<br>4.<code>clear()</code>;清除所有成员，没有返回值。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> arr<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>set<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1 2 3 4 5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意：这个方法对元素为对象的数组不奏效。Set判断元素是否重复的方法类似于 <code>===</code>。</p><p>B.删除数组中指定的元素：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//例如删除数组中值为2的元素</span><span class="token keyword">const</span> index <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,3]</span><span class="token comment">//使用set</span><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>set<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>set<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C.使用<code>map()</code>方法和对象解构语法提取字段</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> studentInfo <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Alice'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Candy'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Den'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Eve'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token keyword">const</span> nameList <span class="token operator">=</span> studentInfo<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nameList<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//["Alice", "Bob", "Candy", "Den", "Eve"]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><p>D.使用<code>filter()</code>方法和对象解构语法过滤字段</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> studentInfo <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Alice'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Candy'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Den'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Eve'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token keyword">const</span> newStudentInfo <span class="token operator">=</span> studentInfo<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> age<span class="token operator">&gt;</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStudentInfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[ { name: 'Alice', age: 18, no: 2 }, { name: 'Den', age: 18, no: 4 }]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>E.数组遍历使用<code>for in</code>,<code>forEach</code>,<code>for of</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> studentInfo <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Alice'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Candy'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Den'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'Eve'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> no<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> studentInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下标</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>studentInfo<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>studentInfo<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> studentInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//每一项的值 { name: 'Alice', age: 18, no: 2 }</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>F.最短的代码创建一个长度为6，每个值为8的数组</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[8, 8, 8, 8, 8, 8]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多详细参考：<a href="http://es6.ruanyifeng.com/#docs/set-map">阮一峰大神</a></p><h3 id="解构"><a href="#解构" class="headerlink" title="解构"></a>解构</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//数组解构</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//a=4,b=5,c=6</span><span class="token comment">//解构不成功其值为undefined</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//a = undefined</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//b = undefined</span><span class="token comment">//对象解构</span><span class="token keyword">let</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token string">"aaa"</span><span class="token punctuation">,</span> a<span class="token operator">:</span> <span class="token string">"bbb"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//a = "bbb"</span><span class="token comment">//b = "aaa"</span><span class="token comment">//c = undefined</span><span class="token keyword">let</span> <span class="token punctuation">{</span> a <span class="token operator">:</span> b <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token string">"aaa"</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token string">"bbb"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//b = "aaa"</span><span class="token comment">//a  error: foo is not defined</span><span class="token comment">//a是匹配的模式，b才是变量。真正被赋值的是变量baz，而不是模式foo。</span><span class="token comment">//字符串解构</span><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'hello'</span><span class="token punctuation">;</span>a <span class="token comment">// "h"</span>b <span class="token comment">// "e"</span>c <span class="token comment">// "l"</span>d <span class="token comment">// "l"</span>e <span class="token comment">// "o"</span><span class="token comment">//函数参数解构</span><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>常见的用途<span class="token comment">// 1.交换变量的值</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>y<span class="token punctuation">,</span> x<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 2.函数返回值</span><span class="token comment">// 返回一个数组</span><span class="token keyword">function</span> <span class="token function">num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 返回一个对象</span><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        b<span class="token operator">:</span> <span class="token number">2</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 3.解析json数据</span><span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token punctuation">{</span>    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    status<span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> status<span class="token punctuation">,</span> data<span class="token operator">:</span> number <span class="token punctuation">}</span> <span class="token operator">=</span> json<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> status<span class="token punctuation">,</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1, 404, [123, 456]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><p>1.模板字符串<br>2.JavaScript 只有<code>indexOf</code>方法，可以用来确定一个字符串是否包含在另一个字符串中。ES6 又提供了三种新方法。<br>a.<code>includes(target,[index])</code>：返回布尔值，表示是否找到了参数字符串。<br>b.<code>startsWith(target,[index])</code>：返回布尔值，表示参数字符串是否在原字符串的头部。<br>c.<code>endsWith(target,[index])</code>：返回布尔值，表示参数字符串是否在原字符串的尾部。<br><code>target</code> 目标字符串，<code>index</code>可选参数 开始搜索的位置</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">'Hello world!'</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">)</span> <span class="token comment">// true</span>s<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'!'</span><span class="token punctuation">)</span> <span class="token comment">// true</span>s<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'o'</span><span class="token punctuation">)</span> <span class="token comment">// true</span>s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'world'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// true</span>s<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// true</span>s<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.<code>str.repeat(n)</code>方法 返回一个新字符串，表示将原字符串重复n次。 n可以是大于-1的数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//abcabcabc 参数为NaN 等同于 0</span>s<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//RangeError 参数是负数或者Infinity，会报错。</span>s<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">1.9</span><span class="token punctuation">)</span> <span class="token comment">//abcabc 参数如果是小数，会被取整。</span>s<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token comment">// "" 参数是 0 到-1 之间的小数，则等同于 0，这是因为会先进行取整运算。0 到-1 之间的小数，取整以后等于-0，repeat视同为 0。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ES5的类"><a href="#ES5的类" class="headerlink" title="ES5的类"></a>ES5的类</h3><p>1.构造函数 实例属性和方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"tom"</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">speak</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//tom</span>p<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// tom:20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 传值篇</title>
      <link href="/2020/03/06/vue-chuan-zhi-pian/"/>
      <url>/2020/03/06/vue-chuan-zhi-pian/</url>
      
        <content type="html"><![CDATA[<h3 id="1-父组件与子组件传值props"><a href="#1-父组件与子组件传值props" class="headerlink" title="1.父组件与子组件传值props"></a>1.父组件与子组件传值props</h3><p>　　1.1定义父组件，父组件传递 inputText这个数值给子组件:</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//父组件</span><span class="token comment">//引入的add-widget组件</span><span class="token comment">//使用 v-bind 的缩写语法通常更简单：</span><span class="token operator">&lt;</span>add<span class="token operator">-</span>widget <span class="token operator">:</span>msg<span class="token operator">-</span>val<span class="token operator">=</span><span class="token string">"msg"</span><span class="token operator">&gt;</span> <span class="token comment">//这里必须要用 - 代替驼峰</span><span class="token comment">// HTML 特性是不区分大小写的。所以，当使用的不是字符串模板，camelCased (驼峰式) 命名的 prop 需要转换为相对应的 kebab-case (短横线隔开式) 命名，当你使用的是字符串模板的时候，则没有这些限制 </span><span class="token operator">&lt;</span><span class="token operator">/</span>add<span class="token operator">-</span>widget<span class="token operator">&gt;</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        msg<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>　　1.2定义子组件，子组件通过 props方法获取父组件传递过来的值。props中可以定义能接收的数据类型，如果不符合会报错。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//子组件通过props来接收数据：</span><span class="token comment">//方式1：</span>props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'msgVal'</span><span class="token punctuation">]</span><span class="token comment">//方式2 :</span>props<span class="token operator">:</span> <span class="token punctuation">{</span>    msgVal<span class="token operator">:</span> Array <span class="token comment">//这样可以指定传入的类型，如果类型不对，会警告</span><span class="token punctuation">}</span><span class="token comment">//方式3：</span>props<span class="token operator">:</span> <span class="token punctuation">{</span>    msgVal<span class="token operator">:</span> <span class="token punctuation">{</span>        type<span class="token operator">:</span> Array<span class="token punctuation">,</span> <span class="token comment">//指定传入的类型</span>        <span class="token comment">//type 也可以是一个自定义构造器函数，使用 instanceof 检测。</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">//这样可以指定默认的值</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//注意 props 会在组件实例创建之前进行校验，所以在 default 或 validator 函数里，诸如 data、computed 或 methods 等实例属性还无法使用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：父子组件传值，数据是异步请求，有可能数据渲染时报错</strong></p><ul><li>原因：异步请求时，数据还没有获取到但是此时已经渲染节点了</li><li>解决方案：可以在父组件需要传递数据的节点加上 v-if = isReady(isReady默认为false），异步请求获取数据后（isReady赋值为true），v-if = isReady</li></ul><span id="more"></span><h3 id="2-子组件向父组件传递数据"><a href="#2-子组件向父组件传递数据" class="headerlink" title="2.子组件向父组件传递数据"></a>2.子组件向父组件传递数据</h3><p>子组件通过$emit方法（用来触发事件,详情见<a href="https://cn.vuejs.org/v2/api/#vm-emit">官网</a>）传递参数：</p><p>子组件：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>children<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emitToParent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>点击按钮传值给父组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    methods<span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token function">emitToParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'child-event'</span><span class="token punctuation">,</span><span class="token string">'我是子组件往父组件传递的内容'</span><span class="token punctuation">)</span>            <span class="token comment">//不支持驼峰命名 -- child-event</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>父组件：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>children</span> <span class="token attr-name">@child-event</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parentEvent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>children</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--child-event 是子组件中自定义的方法，parentEvent 触发父组件中的方法--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> Children <span class="token keyword">from</span> <span class="token string">"./components/children"</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    components<span class="token operator">:</span><span class="token punctuation">{</span>        Children    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token function">parentEvent</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment">//data 就是从子组件传过来的值 </span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment">//此时打印出来的值应该为 '我是子组件往父组件传递的内容'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为了方便起见，我们为这种模式提供一个缩写，即 .sync 修饰符，如</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text-document</span>  <span class="token attr-name"><span class="token namespace">v-bind:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doc.title<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">v-on:</span><span class="token namespace">update:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doc.title = $event<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text-document</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用.sync修饰符：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text-document</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>title.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doc.title<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text-document</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>详情见api：<a href="https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-%E4%BF%AE%E9%A5%B0%E7%AC%A6">https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-修饰符</a></p><h3 id="3-子组件向子组件传递数据"><a href="#3-子组件向子组件传递数据" class="headerlink" title="3.子组件向子组件传递数据"></a>3.子组件向子组件传递数据</h3><p>Vue 没有直接子对子传参的方法，建议将需要传递数据的子组件，都合并为一个组件。如果一定需要子对子传参，可以先从传到父组件，再传到子组件。</p><p>或者通过eventBus或vuex（小项目少页面用eventBus，大项目多页面使用 vuex）传值：</p><h4 id="3-1-通过eventBus-即通过on监听、emit触发的方式"><a href="#3-1-通过eventBus-即通过on监听、emit触发的方式" class="headerlink" title="3.1 通过eventBus(即通过on监听、emit触发的方式)"></a>3.1 通过eventBus(即通过on监听、emit触发的方式)</h4><p>　　　　3.1.1定义一个新的vue实例专门用于传递数据，并导出<br>　　　　<img src="/2020/03/06/vue-chuan-zhi-pian/vue-a.jpg"><br>　　　　3.1.2定义传递的方法名和传输内容，点击事件或钩子函数触发eventBus.emit事件<br>　　　　<img src="/2020/03/06/vue-chuan-zhi-pian/vue-b.jpg"><br>　　　　3.1.3接收传递过来的数据<br>　　　　注意：enentBus是一个另一个新的Vue实例，区分两个this所代表得vue实例<br>　　　　<img src="/2020/03/06/vue-chuan-zhi-pian/vue-c.png"></p><h4 id="3-2-vuex进行传值"><a href="#3-2-vuex进行传值" class="headerlink" title="3.2 vuex进行传值"></a>3.2 vuex进行传值</h4><p>　　详情见：<a href="https://baijiahao.baidu.com/s?id=1618794879569468435&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1618794879569468435&amp;wfr=spider&amp;for=pc</a></p><h3 id="4-画面迁移的组件之间传递数据"><a href="#4-画面迁移的组件之间传递数据" class="headerlink" title="4.画面迁移的组件之间传递数据"></a>4.画面迁移的组件之间传递数据</h3><h4 id="4-1通过路由带参数进行传值，例：两个组件-A和B-A组件通过query把orderId传递给B组件"><a href="#4-1通过路由带参数进行传值，例：两个组件-A和B-A组件通过query把orderId传递给B组件" class="headerlink" title="4.1通过路由带参数进行传值，例：两个组件 A和B,A组件通过query把orderId传递给B组件"></a>4.1通过路由带参数进行传值，例：两个组件 A和B,A组件通过query把orderId传递给B组件</h4><p>A组件传值写法：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">'/conponentsB'</span><span class="token punctuation">,</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> orderId<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 跳转到B</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> B组件取值写法：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>orderId<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意：</strong></p><h5 id="4-1-1、Vue-详解设置路由导航的两种方法：声明式的导航-和编程式的导航router-push-…"><a href="#4-1-1、Vue-详解设置路由导航的两种方法：声明式的导航-和编程式的导航router-push-…" class="headerlink" title="4.1.1、Vue-详解设置路由导航的两种方法：声明式的导航   和编程式的导航router.push(…)"></a>4.1.1、Vue-详解设置路由导航的两种方法：声明式的导航  <router-link :to="..."> 和编程式的导航router.push(…)</router-link></h5><h5 id="4-1-2、其中画面迁移有push和replace两种方式，详情如：https-www-cnblogs-com-vickylinj-p-10880869-html"><a href="#4-1-2、其中画面迁移有push和replace两种方式，详情如：https-www-cnblogs-com-vickylinj-p-10880869-html" class="headerlink" title="4.1.2、其中画面迁移有push和replace两种方式，详情如：https://www.cnblogs.com/vickylinj/p/10880869.html"></a>4.1.2、其中画面迁移有push和replace两种方式，详情如：<a href="https://www.cnblogs.com/vickylinj/p/10880869.html">https://www.cnblogs.com/vickylinj/p/10880869.html</a></h5><h5 id="4-1-3、传参的方式又分为查询参数query（-path）和命名路由params-name-两种方式"><a href="#4-1-3、传参的方式又分为查询参数query（-path）和命名路由params-name-两种方式" class="headerlink" title="4.1.3、传参的方式又分为查询参数query（+path）和命名路由params(+name)两种方式:"></a>4.1.3、传参的方式又分为查询参数query（+path）和命名路由params(+name)两种方式:</h5><ul><li>命名路由搭配params，刷新页面参数会丢失 <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">'news'</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>查询参数搭配query，刷新页面数据不会丢失 <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">'/news'</span><span class="token punctuation">,</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>接受参数使用this.$router后面就是搭配路由的名称就能获取到参数的值<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>userId<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>userId<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>详情如：<a href="https://blog.csdn.net/crazywoniu/article/details/80942642">https://blog.csdn.net/crazywoniu/article/details/80942642</a></li></ul><h4 id="4-2通过设置-Session-Storage缓存的形式进行传递"><a href="#4-2通过设置-Session-Storage缓存的形式进行传递" class="headerlink" title="4.2通过设置 Session Storage缓存的形式进行传递"></a>4.2通过设置 Session Storage缓存的形式进行传递</h4><p>两个组件A和B，在A组件中设置缓存orderData</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> orderData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">'orderId'</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token string">'price'</span><span class="token operator">:</span> <span class="token number">88</span> <span class="token punctuation">}</span> sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'缓存名称'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>orderData<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>B组件就可以获取在A中设置的缓存了</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> dataB <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'缓存名称'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-通过provide-inject传值"><a href="#5-通过provide-inject传值" class="headerlink" title="5.通过provide/inject传值"></a>5.通过provide/inject传值</h3><p>详情见：<a href="https://www.cnblogs.com/vickylinj/p/13368745.html">https://www.cnblogs.com/vickylinj/p/13368745.html</a></p><h3 id="6-通过-attrs、-listeners传值"><a href="#6-通过-attrs、-listeners传值" class="headerlink" title="6.通过$attrs、$listeners传值"></a>6.通过$attrs、$listeners传值</h3><p>详情见：<a href="https://www.cnblogs.com/vickylinj/p/13376391.html">https://www.cnblogs.com/vickylinj/p/13376391.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 常用操作</title>
      <link href="/2020/03/06/vue-chang-yong-cao-zuo/"/>
      <url>/2020/03/06/vue-chang-yong-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h3 id="1-v-text-v-html-中如何使用过滤器"><a href="#1-v-text-v-html-中如何使用过滤器" class="headerlink" title="1.v-text/v-html 中如何使用过滤器"></a>1.v-text/v-html 中如何使用过滤器</h3><p>Vue2.x 不再支持在 <code>v-html</code> 中使用过滤器Vue2.x 的过滤器现在只能应用在“Mustache”语法 (双大括号) 的文本插值 和 v-bind 中。<br>如果要使用采用如下方式：</p><blockquote><p>v-html=”$options.filters.过滤器名称(需要过滤的内容,[过滤器需要的参数])”</p></blockquote><h3 id="2-在Vue组件中动态生成的DOM类名样式不作用-deep"><a href="#2-在Vue组件中动态生成的DOM类名样式不作用-deep" class="headerlink" title="2.在Vue组件中动态生成的DOM类名样式不作用-/deep/"></a>2.在Vue组件中动态生成的DOM类名样式不作用-/deep/</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div v<span class="token operator">-</span>text<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>        name<span class="token operator">:</span><span class="token string">"app"</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                text<span class="token operator">:</span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"red"</span><span class="token operator">&gt;</span>红色<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>            <span class="token punctuation">}</span>         <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>style scoped lang<span class="token operator">=</span><span class="token string">"less"</span><span class="token operator">&gt;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">.</span>red<span class="token punctuation">{</span>        color<span class="token operator">:</span>red<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：/deep/ 只是在最外层使用，不要嵌套使用。<br>参考文档：<a href="https://vue-loader.vuejs.org/guide/scoped-css.html">deep</a></p><h3 id="3-使用a标签打电话-其他的邮件，联系方式类似"><a href="#3-使用a标签打电话-其他的邮件，联系方式类似" class="headerlink" title="3.使用a标签打电话 (其他的邮件，联系方式类似)"></a>3.使用a标签打电话 (其他的邮件，联系方式类似)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>a <span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"'tel:'+ phone"</span><span class="token operator">&gt;</span>打电话<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"'mailto:'+ email"</span><span class="token operator">&gt;</span>发邮件<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><span id="more"></span><h3 id="4-注册自定义指令"><a href="#4-注册自定义指令" class="headerlink" title="4.注册自定义指令"></a>4.注册自定义指令</h3><ul><li><p>全局注册</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>页面载入时，input 元素自动获取焦点：<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>input v<span class="token operator">-</span>focus<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token comment">// 注册一个全局自定义指令 v-focus</span>Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">'focus'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token comment">// 当绑定元素插入到 DOM 中。</span>    <span class="token function-variable function">inserted</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 聚焦元素</span>        el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 创建根实例</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>局部注册</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>页面载入时，input 元素自动获取焦点：<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>input v<span class="token operator">-</span>focus<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token comment">// 创建根实例</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>    directives<span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token comment">// 注册一个局部的自定义指令 v-focus</span>        focus<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token comment">// 指令的定义</span>            <span class="token function-variable function">inserted</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// 聚焦元素</span>                el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="5-Prop-验证"><a href="#5-Prop-验证" class="headerlink" title="5.Prop 验证"></a>5.Prop 验证</h3><p>我们可以为组件的 prop 指定验证要求，例如你知道的这些类型。如果有一个需求没有被满足，则 Vue 会在浏览器控制台中警告你。这在开发一个会被别人用到的组件时尤其有帮助。</p><p>为了定制 prop 的验证方式，你可以为 props 中的值提供一个带有验证需求的对象，而不是一个字符串数组。例如：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'my-component'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    props<span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token comment">// 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证)</span>        propA<span class="token operator">:</span> Number<span class="token punctuation">,</span>        <span class="token comment">// 多个可能的类型</span>        propB<span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">,</span> Number<span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment">// 必填的字符串</span>        propC<span class="token operator">:</span> <span class="token punctuation">{</span>            type<span class="token operator">:</span> String<span class="token punctuation">,</span>            required<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">// 带有默认值的数字</span>        propD<span class="token operator">:</span> <span class="token punctuation">{</span>            type<span class="token operator">:</span> Number<span class="token punctuation">,</span>            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">100</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">// 带有默认值的对象</span>        propE<span class="token operator">:</span> <span class="token punctuation">{</span>            type<span class="token operator">:</span> Object<span class="token punctuation">,</span>            <span class="token comment">// 对象或数组默认值必须从一个工厂函数获取</span>            <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">'hello'</span> <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">// 自定义验证函数</span>        propF<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// 这个值必须匹配下列字符串中的一个</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">'success'</span><span class="token punctuation">,</span> <span class="token string">'warning'</span><span class="token punctuation">,</span> <span class="token string">'danger'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-生成二维码"><a href="#6-生成二维码" class="headerlink" title="6.生成二维码"></a>6.生成二维码</h3><p><a href="https://github.com/theomessin/vue-qriously#readme">vue-qriously</a><br><a href="https://segmentfault.com/a/1190000014875645">生成二维码并下载</a></p><ul><li><p>如何安装并导入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ES6</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> VueQriously <span class="token keyword">from</span> <span class="token string">'vue-qriously'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueQriously<span class="token punctuation">)</span><span class="token comment">// ES5</span><span class="token keyword">var</span> Vue <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vue'</span><span class="token punctuation">)</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vue-qriously'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>如何使用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>qriously value<span class="token operator">=</span><span class="token string">"Hello World!"</span> <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">"200"</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p></li></ul><p>background: string 二维码背景 默认：’white’</p><p>backgroundAlpha:number 二维码背景透明度 默认： 1.0</p><p>foreground:string 二维码前景色 默认：’black’</p><p>foregroundAlpha:number 二维码前景色透明度 默认：1.0</p><p>level:string 二维码误差校验等级(L,M,Q,H) 默认：’L’</p><p>mime:string 二维码图片的mine type</p><p>padding:number 二维码padding值(像素) 默认null(auto)</p><p>size:number 二维码大小(像素) 默认：100</p><p>value:string 二维码内容</p><h1 id="7-60s短信验证码倒计时"><a href="#7-60s短信验证码倒计时" class="headerlink" title="7.60s短信验证码倒计时"></a>7.60s短信验证码倒计时</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"getInfobtn"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>button<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>time <span class="token operator">|</span> change<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>        <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                time <span class="token operator">:</span> <span class="token string">'获取验证码'</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        props <span class="token operator">:</span> <span class="token punctuation">{</span>            start <span class="token operator">:</span> <span class="token punctuation">{</span>                type <span class="token operator">:</span> Boolean            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        watch <span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">start</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>oldvalue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>start<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//加上这个可以实现点击另一个按钮触发这个组件的点击事件，对应的是：自动触发倒计时，就是默认就显示60s后重新获取</span>        methods<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">countDown</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">--</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'countDown'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">=</span> <span class="token string">'重新发送'</span><span class="token punctuation">;</span>                        flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                        <span class="token function">clearInterval</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        filters <span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">change</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>               <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                   <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                       <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s后重新获取</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span>                   <span class="token keyword">return</span> value<span class="token operator">+</span><span class="token string">'s后重新获取'</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                   <span class="token keyword">return</span> value<span class="token punctuation">;</span>               <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span><span class="token punctuation">.</span>getInfobtn button<span class="token punctuation">{</span>    background<span class="token operator">-</span>color<span class="token operator">:</span> green<span class="token punctuation">;</span>    color<span class="token operator">:</span>#fff<span class="token punctuation">;</span>    padding<span class="token operator">:</span> <span class="token number">0.1</span>rem<span class="token punctuation">;</span>    border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0.05</span>rem<span class="token punctuation">;</span>    width<span class="token operator">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"getSubsidy"</span><span class="token operator">&gt;</span>        <span class="token comment">//给组件绑定事件就加上.native</span>        <span class="token operator">&lt;</span>countDown <span class="token operator">:</span>start<span class="token operator">=</span><span class="token string">'start'</span> @countDown <span class="token operator">=</span><span class="token string">'start=false'</span> @click<span class="token punctuation">.</span>native<span class="token operator">=</span><span class="token string">'sendCode'</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>countDown<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"shout"</span><span class="token operator">&gt;</span>点我触发上面的倒计时<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token keyword">import</span> countDown <span class="token keyword">from</span> <span class="token string">"./countDown"</span>    <span class="token keyword">export</span> <span class="token keyword">default</span><span class="token punctuation">{</span>        components<span class="token operator">:</span><span class="token punctuation">{</span>            countDown        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                start <span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span><span class="token punctuation">{</span>            <span class="token function">sendCode</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//前面发送ajax请求成功之后调用this.start = true开始短信倒计时</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token boolean">true</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">shout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//配合组件里面的created钩子函数自动倒计时。</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-在vue里面使用RSA加密"><a href="#8-在vue里面使用RSA加密" class="headerlink" title="8.在vue里面使用RSA加密"></a>8.在vue里面使用RSA加密</h3><p>1.将jsencrypt.min.js复制到static文件夹下面<br>2.在index.html里面引入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span>text<span class="token operator">/</span>javascript src<span class="token operator">=</span><span class="token string">"./static/jsencrypt.min.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.定义加密函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token keyword">var</span> <span class="token function-variable function">Rsa</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> encrypt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSEncrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        publicKey <span class="token operator">=</span> <span class="token string">"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCBG3UFPAxh+a0NLv6Plvjo5YPDdnlbED8dI4GP21DdFKvXVFcPb0lSRrht5Xrg7ck4PJ/fovfSi7k8MYqPY52g9tnPzkAthVOs99Tw6DVe22vV2hcs7dXvtk+TxKy4IqMjZA77hiH8wMYcJur+o4R770mrVP4fP88x53EQ4PaayQIDAQAB"</span><span class="token punctuation">;</span>        encrypt<span class="token punctuation">.</span><span class="token function">setPublicKey</span><span class="token punctuation">(</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> encrypt<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面定义可以在methods里面定义<br>4.使用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">conosle<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Rsa</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="9-货币过滤器"><a href="#9-货币过滤器" class="headerlink" title="9.货币过滤器"></a>9.货币过滤器</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'currency'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> _currency<span class="token punctuation">,</span> decimals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> digitsRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\d{3})(?=\d)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>    value <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isFinite</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>value <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>    _currency <span class="token operator">=</span> _currency <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> _currency <span class="token operator">:</span> <span class="token string">'$'</span><span class="token punctuation">;</span>    decimals <span class="token operator">=</span> decimals <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> decimals <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> stringified <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>decimals<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> _int <span class="token operator">=</span> decimals <span class="token operator">?</span> stringified<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span> decimals<span class="token punctuation">)</span> <span class="token operator">:</span> stringified<span class="token punctuation">;</span>    <span class="token keyword">var</span> i <span class="token operator">=</span> _int<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> head <span class="token operator">=</span> i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> _int<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>_int<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token string">','</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> _float <span class="token operator">=</span> decimals <span class="token operator">?</span> stringified<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span> decimals<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sign <span class="token operator">=</span> value <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">'-'</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> sign <span class="token operator">+</span> _currency <span class="token operator">+</span> head <span class="token operator">+</span> _int<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>digitsRE<span class="token punctuation">,</span> <span class="token string">'$1,'</span><span class="token punctuation">)</span> <span class="token operator">+</span> _float<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-时间过滤器"><a href="#10-时间过滤器" class="headerlink" title="10.时间过滤器"></a>10.时间过滤器</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> filterDate <span class="token operator">=</span> <span class="token punctuation">(</span>date<span class="token punctuation">,</span> fmt <span class="token operator">=</span> <span class="token string">'YYYY-MM-DD HH:mm'</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>date<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> date <span class="token operator">===</span> <span class="token string">'number'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>      <span class="token string">'M+'</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>      <span class="token string">'D+'</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'h+'</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">12</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">12</span> <span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">12</span><span class="token punctuation">,</span>      <span class="token string">'H+'</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'m+'</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'s+'</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'q+'</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'S'</span><span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> week <span class="token operator">=</span> <span class="token punctuation">{</span>      <span class="token string">'0'</span><span class="token operator">:</span> <span class="token string">'\u65e5'</span><span class="token punctuation">,</span>      <span class="token string">'1'</span><span class="token operator">:</span> <span class="token string">'\u4e00'</span><span class="token punctuation">,</span>      <span class="token string">'2'</span><span class="token operator">:</span> <span class="token string">'\u4e8c'</span><span class="token punctuation">,</span>      <span class="token string">'3'</span><span class="token operator">:</span> <span class="token string">'\u4e09'</span><span class="token punctuation">,</span>      <span class="token string">'4'</span><span class="token operator">:</span> <span class="token string">'\u56db'</span><span class="token punctuation">,</span>      <span class="token string">'5'</span><span class="token operator">:</span> <span class="token string">'\u4e94'</span><span class="token punctuation">,</span>      <span class="token string">'6'</span><span class="token operator">:</span> <span class="token string">'\u516d'</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(Y+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      fmt <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$<span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">-</span> RegExp<span class="token punctuation">.</span>$<span class="token number">1.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(E+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      fmt <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$<span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$<span class="token number">1.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$<span class="token number">1.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">'\u661f\u671f'</span> <span class="token operator">:</span> <span class="token string">'\u5468'</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token operator">+</span> week<span class="token punctuation">[</span>date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">''</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'('</span> <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        fmt <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$<span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$<span class="token number">1.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>o<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'00'</span> <span class="token operator">+</span> o<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span> <span class="token operator">+</span> o<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> fmt<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-过滤电话号码182-1234"><a href="#11-过滤电话号码182-1234" class="headerlink" title="11.过滤电话号码182****1234"></a>11.过滤电话号码182****1234</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'telfilter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> data <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  data<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-vue-router-商品列表页进入商品详情页，返回商品列表回滚到之前走的位置"><a href="#12-vue-router-商品列表页进入商品详情页，返回商品列表回滚到之前走的位置" class="headerlink" title="12.vue-router 商品列表页进入商品详情页，返回商品列表回滚到之前走的位置"></a>12.vue-router 商品列表页进入商品详情页，返回商品列表回滚到之前走的位置</h3><p>条件：<br>1.必须是body在滚动<br>2.商品详情页路由需要缓存<br>3.设置路由离开保存滚动高度，回到列表是设置之前保存的滚动高度。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">data<span class="token operator">:</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            scroll<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//保存滚动高度</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>，<span class="token function">beforeRouteLeave</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span><span class="token keyword">from</span><span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//离开的时候保存body的滚动高度</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>scroll<span class="token operator">=</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">beforeRouteEnter</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span><span class="token keyword">from</span><span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//详情页回到列表页的时候设置body的滚动高度</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">vm</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">.</span>name<span class="token operator">==</span><span class="token string">"getSubsidy"</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//商品详情页的路由name</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token operator">=</span>vm<span class="token punctuation">.</span>scroll<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="13-vue里面获取滚动高度，并实现吸顶效果"><a href="#13-vue里面获取滚动高度，并实现吸顶效果" class="headerlink" title="13.vue里面获取滚动高度，并实现吸顶效果"></a>13.vue里面获取滚动高度，并实现吸顶效果</h3><p>1.布局</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xiding-outbox<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xid<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xiding-innerbox<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{<span class="token punctuation">'</span>xiding<span class="token punctuation">'</span>:isFixed}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>help<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>callHandleService(customerServicePhone)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>F3 C0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../../assets/img/material/customer_service_ic.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                    如需帮助，点击咨询人工服务                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-input<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>F4 C1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>                                <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入品牌名称搜索<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queryKey<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-btn F4 C0<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>F4 C0 find<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isFade=!isFade<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>查找我要的品类            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.xiding-outbox</span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> 3.68rem<span class="token selector">;//吸顶外面固定吸顶内容的高度    .xiding-innerbox</span><span class="token punctuation">{</span>        <span class="token selector">.help</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 1.78667rem<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 1.78667rem<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #282828<span class="token selector">;            p</span><span class="token punctuation">{</span>                <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>                <span class="token property">margin-left</span><span class="token punctuation">:</span> -3.04rem<span class="token selector">;                img</span><span class="token punctuation">{</span>                    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>                    <span class="token property">top</span><span class="token punctuation">:</span> 0.2rem<span class="token punctuation">;</span>                    <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.21333rem<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector">.search</span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0.50667rem 0.29333rem<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #e6e6e6<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span>space-between<span class="token selector">;            .search-box</span><span class="token punctuation">{</span>                    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token selector">;                .search-input</span><span class="token punctuation">{</span>                    <span class="token property">border</span><span class="token punctuation">:</span>1px solid #282828<span class="token punctuation">;</span>                    <span class="token property">border-right</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>                    <span class="token property">width</span><span class="token punctuation">:</span>3.4rem<span class="token punctuation">;</span>                    <span class="token property">height</span><span class="token punctuation">:</span> 0.8rem<span class="token punctuation">;</span>                    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.08rem 0 0 0.08rem<span class="token punctuation">;</span>                    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token selector">;                    input</span><span class="token punctuation">{</span>                        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>                        <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>                        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>                        <span class="token property">height</span><span class="token punctuation">:</span> 0.8rem<span class="token punctuation">;</span>                        <span class="token property">padding-left</span><span class="token punctuation">:</span> 0.21333rem<span class="token punctuation">;</span>                        <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.08rem 0 0 0.08rem<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token selector">.search-btn</span><span class="token punctuation">{</span>                    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0 0.08rem 0.08rem 0<span class="token punctuation">;</span>                    <span class="token property">border</span><span class="token punctuation">:</span>1px solid #282828<span class="token punctuation">;</span>                    <span class="token property">height</span><span class="token punctuation">:</span> 0.8rem<span class="token punctuation">;</span>                    <span class="token property">line-height</span><span class="token punctuation">:</span> 0.8rem<span class="token punctuation">;</span>                    <span class="token property">width</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span>                    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>                    <span class="token property">background-color</span><span class="token punctuation">:</span> #282828<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token selector">.search-btn:active</span> <span class="token punctuation">{</span>                      <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>            <span class="token selector">.find</span><span class="token punctuation">{</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> #ed316b<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> 0.85rem<span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> 3.4rem<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.08rem<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span>1px solid #ed316b<span class="token selector">;                p</span><span class="token punctuation">{</span>                    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>                    <span class="token property">width</span><span class="token punctuation">:</span> 0.21333rem<span class="token punctuation">;</span>                    <span class="token property">height</span><span class="token punctuation">:</span> 0.21333rem<span class="token punctuation">;</span>                    <span class="token property">border</span><span class="token punctuation">:</span>1px solid <span class="token punctuation">;</span>                    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>                    <span class="token property">border-color</span><span class="token punctuation">:</span> #fff #fff transparent transparent<span class="token punctuation">;</span>                    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotateZ</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>             <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector">.xiding</span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.在methods里面定义touchMove方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">touchMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//获取滚动高度</span>    <span class="token keyword">var</span> bodyTop<span class="token operator">=</span>window<span class="token punctuation">.</span>pageYOffset <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>    <span class="token comment">//获取被吸顶元素的高度</span>    <span class="token keyword">var</span> xidH<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>xid<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>bodyTop<span class="token operator">&gt;=</span>xidH<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isFixed<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isFixed<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.在mounted钩子函数里面给window监听scroll事件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>touchMove<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="14-图片懒加载"><a href="#14-图片懒加载" class="headerlink" title="14.图片懒加载"></a>14.图片懒加载</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> VueLazyload <span class="token keyword">from</span> <span class="token string">'vue-lazyload'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueLazyload<span class="token punctuation">,</span> <span class="token punctuation">{</span>    error<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./assets/img/game-icon/yxdt_icon_none.png'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    loading<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./assets/img/loading.gif'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    attempt<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img in list<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">v-lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.src<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="15-vue里面弹框滑动阻止body滚动"><a href="#15-vue里面弹框滑动阻止body滚动" class="headerlink" title="15.vue里面弹框滑动阻止body滚动"></a>15.vue里面弹框滑动阻止body滚动</h3><p>1.main.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//解决遮罩层滚动穿透问题，分别在遮罩层弹出后和关闭前调用</span><span class="token keyword">const</span> ModalHelper <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">bodyCls</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> scrollTop<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        <span class="token function-variable function">open</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            scrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>scrollingElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bodyCls<span class="token punctuation">)</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token operator">-</span>scrollTop <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function-variable function">close</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>bodyCls<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// scrollTop lost after set position:fixed, restore it back.</span>            document<span class="token punctuation">.</span>scrollingElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> scrollTop<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'dialog-open'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>ModalHelper <span class="token operator">=</span> ModalHelper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.body添加class dialog-open</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body.dialog-open</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>3.监控 是否显示弹框变量</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">watch<span class="token operator">:</span><span class="token punctuation">{</span>    <span class="token function">isShow</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ModalHelper<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ModalHelper<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="16-抠出mint-ui-Loadmore源码自定义"><a href="#16-抠出mint-ui-Loadmore源码自定义" class="headerlink" title="16.抠出mint-ui Loadmore源码自定义"></a>16.抠出mint-ui Loadmore源码自定义</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore-content"</span> <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"{ 'is-dropped': topDropped || bottomDropped}"</span> <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"{ 'transform': 'translate3d(0, ' + translate + 'px, 0)' }"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"top"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore-top"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"topMethod"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>mt<span class="token operator">-</span>spinner v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"topStatus === 'loading'"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore-spinner"</span> <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">"size"</span> type<span class="token operator">=</span><span class="token string">"fading-circle"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mt<span class="token operator">-</span>spinner<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore-text"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> topText <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>slot<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"bottom"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore-bottom"</span>  v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"bottomMethod"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>mt<span class="token operator">-</span>spinner v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"bottomStatus === 'loading'"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore-spinner"</span> <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">"size"</span> type<span class="token operator">=</span><span class="token string">"fading-circle"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mt<span class="token operator">-</span>spinner<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-loadmore-text"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> bottomText <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>        props<span class="token operator">:</span> <span class="token punctuation">{</span>            stopTranslate<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">80</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            maxDistance<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            autoFill<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            distanceIndex<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">2</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            topPullText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'下拉刷新'</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            topDropText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'释放刷新'</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            topLoadingText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'刷新中...'</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            topDistance<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">70</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            topMethod<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Function            <span class="token punctuation">}</span><span class="token punctuation">,</span>            bottomPullText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'上拉加载'</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            bottomDropText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'释放加载'</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            bottomLoadingText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'疯狂加载中...'</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            bottomDistance<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">70</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            bottomMethod<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Function            <span class="token punctuation">}</span><span class="token punctuation">,</span>            bottomAllLoaded<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                size<span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">HTML_FONT_SIZE</span> <span class="token operator">*</span> <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                translate<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 此变量决定当前组件上下移动,</span>                scrollEventTarget<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 滚动的dom节点</span>                containerFilled<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 当前滚动的内容是否填充完整,不完成会调用 loadmore的回调函数</span>                topText<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">// 下拉刷新,显示的文本</span>                topDropped<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 记录当前drop状态,用给组件dom添加is-dropped class(添加回到原点的动画)</span>                bottomText<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">// 上拉加载更多 显示的文本</span>                bottomDropped<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 同topDropped</span>                bottomReached<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 当前滚动是否滚动到了底部</span>                direction<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">// touch-move过程中, 当前滑动的方向</span>                startY<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// touch-start 起始的y的坐标值</span>                startScrollTop<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// touch-start 起始的滚动dom的 scrollTop</span>                currentY<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// touch-move 过程中的 y的坐标</span>                topStatus<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">// 下拉刷新的状态: pull(下拉) drop(释放) loading(正在加载数据)</span>                bottomStatus<span class="token operator">:</span> <span class="token string">""</span> <span class="token comment">// 上拉加载更多的状态: 状态同上</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        watch<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">topStatus</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"top-status-change"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">case</span> <span class="token string">"pull"</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>topText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topPullText<span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"drop"</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>topText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topDropText<span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"loading"</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>topText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topLoadingText<span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">bottomStatus</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"bottom-status-change"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">case</span> <span class="token string">"pull"</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>bottomText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomPullText<span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"drop"</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>bottomText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomDropText<span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"loading"</span><span class="token operator">:</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>bottomText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomLoadingText<span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当前 vue component挂载完成之后, 执行init()函数</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function-variable function">onTopLoaded</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">onTopLoaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> <span class="token keyword">this</span>$<span class="token number">1</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span>$<span class="token number">1.</span>topStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">onBottomLoaded</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">onBottomLoaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> <span class="token keyword">this</span>$<span class="token number">1</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>bottomDropped <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span>$<span class="token number">1.</span>scrollEventTarget <span class="token operator">===</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stopTranslate<span class="token punctuation">;</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span>$<span class="token number">1.</span>scrollEventTarget<span class="token punctuation">.</span>scrollTop <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stopTranslate<span class="token punctuation">;</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">this</span>$<span class="token number">1.</span>translate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>bottomAllLoaded <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>containerFilled<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fillContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>topText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topPullText<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getScrollEventTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取滚动的dom节点</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomMethod <span class="token operator">===</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fillContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 判断当前滚动内容是否填满,没有执行外部传入的loadmore回调函数加载数据</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindTouchEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 为当前组件dom注册touch事件</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topMethod <span class="token operator">===</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindTouchEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">getScrollEventTarget</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">getScrollEventTarget</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> currentNode <span class="token operator">=</span> element<span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>currentNode <span class="token operator">&amp;&amp;</span> currentNode<span class="token punctuation">.</span>tagName <span class="token operator">!==</span> <span class="token string">'HTML'</span> <span class="token operator">&amp;&amp;</span>                    currentNode<span class="token punctuation">.</span>tagName <span class="token operator">!==</span> <span class="token string">'BODY'</span> <span class="token operator">&amp;&amp;</span> currentNode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> overflowY <span class="token operator">=</span> document<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>currentNode<span class="token punctuation">)</span><span class="token punctuation">.</span>overflowY<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>overflowY <span class="token operator">===</span> <span class="token string">'scroll'</span> <span class="token operator">||</span> overflowY <span class="token operator">===</span> <span class="token string">'auto'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">return</span> currentNode<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    currentNode <span class="token operator">=</span> currentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> window<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">getScrollTop</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">getScrollTop</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>element <span class="token operator">===</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>pageYOffset <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> element<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">bindTouchEvents</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">bindTouchEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleTouchStart<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleTouchMove<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleTouchEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">fillContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>autoFill<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget <span class="token operator">===</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>containerFilled <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom <span class="token operator">&gt;=</span>                                document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>containerFilled <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom <span class="token operator">&gt;=</span>                                <span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>containerFilled<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 如果没有填满内容, 执行loadmore的操作</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> <span class="token string">'loading'</span><span class="token punctuation">;</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bottomMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用外部的loadmore函数,加载更多数据</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">handleTouchStart</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>startY <span class="token operator">=</span> event<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span> <span class="token comment">// 手指按下的位置, 用于下面move事件计算手指移动的距离</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>startScrollTop <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getScrollTop</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 起始scroll dom的 scrollTop(滚动的距离)</span>                <span class="token comment">//下面重置状态变量</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>bottomReached <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">!==</span> <span class="token string">'loading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>topDropped <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">!==</span> <span class="token string">'loading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>bottomDropped <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">handleTouchMove</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//确保当前touch节点的y的位置,在当前loadmore组件的内部</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startY <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startY <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>currentY <span class="token operator">=</span> event<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>                <span class="token keyword">let</span> distance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentY <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startY<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>distanceIndex<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">=</span> distance <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">'down'</span> <span class="token operator">:</span> <span class="token string">'up'</span><span class="token punctuation">;</span>                <span class="token comment">// 下拉刷新,条件(1.外部传入了刷新的回调函数 2.滑动方向是向下的 3.当前滚动节点的scrollTop为0 4.当前topStatus不是loading)</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topMethod <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">===</span> <span class="token string">'down'</span> <span class="token operator">&amp;&amp;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getScrollTop</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">!==</span> <span class="token string">'loading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">//计算translate(将要平移的距离), 如果当前移动的距离大于设置的最大距离,那么此次这次移动就不起作用了</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>maxDistance <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> distance <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxDistance <span class="token operator">?</span> distance <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startScrollTop <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translate<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> distance <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startScrollTop<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>topDistance <span class="token operator">?</span> <span class="token string">'drop'</span> <span class="token operator">:</span> <span class="token string">'pull'</span><span class="token punctuation">;</span> <span class="token comment">// drop: 到达指定的阈值,可以执行刷新操作了</span>                <span class="token punctuation">}</span>                <span class="token comment">// 上拉操作, 判断当前scroll dom是否滚动到了底部</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">===</span> <span class="token string">'up'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>bottomReached <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomReached <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkBottomReached</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomMethod <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">===</span> <span class="token string">'up'</span> <span class="token operator">&amp;&amp;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>bottomReached <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">!==</span> <span class="token string">'loading'</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>bottomAllLoaded<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 判断的逻辑思路同上</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>maxDistance <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>distance<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxDistance <span class="token operator">?</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getScrollTop</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startScrollTop <span class="token operator">+</span> distance <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translate<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getScrollTop</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startScrollTop <span class="token operator">+</span> distance<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomDistance <span class="token operator">?</span> <span class="token string">'drop'</span> <span class="token operator">:</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'translate-change'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translate<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">checkBottomReached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget <span class="token operator">===</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">+</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">&gt;=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">handleTouchEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">===</span> <span class="token string">'down'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getScrollTop</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollEventTarget<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>topDropped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 为当前组件添加 is-dropped class(也就是添加动画处理)</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">===</span> <span class="token string">'drop'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 到达了loading的状态</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stopTranslate<span class="token punctuation">;</span> <span class="token comment">// top slot的高度</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">=</span> <span class="token string">'loading'</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">topMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行回调函数</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 没有到达,回调原点</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token string">'0'</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token comment">// 处理逻辑同上</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">===</span> <span class="token string">'up'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bottomReached <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>bottomDropped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>bottomReached <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">===</span> <span class="token string">'drop'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>stopTranslate<span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> <span class="token string">'loading'</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bottomMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>translate <span class="token operator">=</span> <span class="token string">'0'</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> <span class="token string">'pull'</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'translate-change'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>translate<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"less"</span> scoped<span class="token operator">&gt;</span>    @<span class="token keyword">import</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'../components/less/common.less'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle <span class="token punctuation">{</span>        position<span class="token operator">:</span> relative    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle <span class="token punctuation">{</span>        width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>        height<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>        top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        position<span class="token operator">:</span> absolute    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        content<span class="token operator">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>        display<span class="token operator">:</span> block<span class="token punctuation">;</span>        margin<span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>        width<span class="token operator">:</span> <span class="token number">15</span><span class="token operator">%</span><span class="token punctuation">;</span>        height<span class="token operator">:</span> <span class="token number">15</span><span class="token operator">%</span><span class="token punctuation">;</span>        border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">:</span> mint<span class="token operator">-</span>fading<span class="token operator">-</span>circle <span class="token number">1.2</span>s infinite ease<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>out both<span class="token punctuation">;</span>        animation<span class="token operator">:</span> mint<span class="token operator">-</span>fading<span class="token operator">-</span>circle <span class="token number">1.2</span>s infinite ease<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>out both    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle2 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">30</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">30</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle2<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1.1</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1.1</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle3 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">60</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">60</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle3<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle4 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle4<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.9</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.9</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle5 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">120</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">120</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle5<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.8</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.8</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle6 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">150</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">150</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle6<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.7</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.7</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle7 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle7<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.6</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.6</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle8 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">210</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">210</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle8<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.5</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.5</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle9 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">240</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">240</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle9<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.4</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.4</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle10 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">270</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">270</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle10<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.3</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.3</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle11 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">300</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">300</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle11<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.2</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.2</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle12 <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">330</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">330</span>deg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token operator">-</span>circle<span class="token punctuation">.</span>is<span class="token operator">-</span>circle12<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.1</span>s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>delay<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.1</span>s    <span class="token punctuation">}</span>    @<span class="token operator">-</span>webkit<span class="token operator">-</span>keyframes mint<span class="token operator">-</span>fading<span class="token operator">-</span>circle <span class="token punctuation">{</span>        <span class="token number">0</span><span class="token operator">%</span><span class="token punctuation">,</span>        <span class="token number">39</span><span class="token operator">%</span><span class="token punctuation">,</span>        <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">{</span>            opacity<span class="token operator">:</span> <span class="token number">0</span>        <span class="token punctuation">}</span>        <span class="token number">40</span><span class="token operator">%</span> <span class="token punctuation">{</span>            opacity<span class="token operator">:</span> <span class="token number">1</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    @keyframes mint<span class="token operator">-</span>fading<span class="token operator">-</span>circle <span class="token punctuation">{</span>        <span class="token number">0</span><span class="token operator">%</span><span class="token punctuation">,</span>        <span class="token number">39</span><span class="token operator">%</span><span class="token punctuation">,</span>        <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">{</span>            opacity<span class="token operator">:</span> <span class="token number">0</span>        <span class="token punctuation">}</span>        <span class="token number">40</span><span class="token operator">%</span> <span class="token punctuation">{</span>            opacity<span class="token operator">:</span> <span class="token number">1</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore <span class="token punctuation">{</span>        overflow<span class="token operator">:</span> hidden    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>content <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>content<span class="token punctuation">.</span>is<span class="token operator">-</span>dropped <span class="token punctuation">{</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transition<span class="token operator">:</span> <span class="token number">.2</span>s<span class="token punctuation">;</span>        transition<span class="token operator">:</span> <span class="token number">.2</span>s    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>top<span class="token punctuation">,</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>bottom <span class="token punctuation">{</span>        text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>        height<span class="token operator">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">50</span>px    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>top <span class="token punctuation">{</span>        margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>        height<span class="token operator">:</span> <span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>        line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>        span <span class="token punctuation">{</span>            display<span class="token operator">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>            vertical<span class="token operator">-</span>align<span class="token operator">:</span> middle<span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token punctuation">.</span>is<span class="token operator">-</span>rotate <span class="token punctuation">{</span>                <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>                transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token punctuation">{</span>            display<span class="token operator">:</span> block<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>bottom <span class="token punctuation">{</span>        margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>        height<span class="token operator">:</span> <span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>        line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>spinner <span class="token punctuation">{</span>        display<span class="token operator">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>        margin<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>        vertical<span class="token operator">-</span>align<span class="token operator">:</span> middle    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>text <span class="token punctuation">{</span>        vertical<span class="token operator">-</span>align<span class="token operator">:</span> middle<span class="token punctuation">;</span>        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.32</span>rem<span class="token comment">/* 24/75 */</span><span class="token punctuation">;</span>        color<span class="token operator">:</span> @color<span class="token operator">-</span>green<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">.</span>mint<span class="token operator">-</span>loadmore<span class="token operator">-</span>bottom<span class="token punctuation">{</span>    margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>    height<span class="token operator">:</span> <span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>    line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.6</span>rem <span class="token comment">/* 120/75 */</span><span class="token punctuation">;</span>        span <span class="token punctuation">{</span>        display<span class="token operator">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>        <span class="token operator">-</span>webkit<span class="token operator">-</span>transition<span class="token operator">:</span> <span class="token number">.2</span>s linear<span class="token punctuation">;</span>        transition<span class="token operator">:</span> <span class="token number">.2</span>s linear<span class="token punctuation">;</span>        vertical<span class="token operator">-</span>align<span class="token operator">:</span> middle<span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token punctuation">.</span>is<span class="token operator">-</span>rotate <span class="token punctuation">{</span>            <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            transform<span class="token operator">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>mint<span class="token operator">-</span>spinner<span class="token operator">-</span>fading<span class="token operator">-</span>circle<span class="token punctuation">{</span>        display<span class="token operator">:</span> block<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>Header rooter<span class="token operator">=</span><span class="token string">"-1"</span> title<span class="token operator">=</span><span class="token string">"自助返水"</span> <span class="token operator">:</span>hasNoBack<span class="token operator">=</span><span class="token string">"true"</span> iFontsize<span class="token operator">=</span><span class="token string">".58667rem"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Header<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 查看返水详情弹框 <span class="token operator">--</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"isShowBackwaterMask"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"copy-writer-details-mask"</span> @touchmove<span class="token punctuation">.</span>self<span class="token punctuation">.</span>prevent<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"isShowBackwaterMask"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"copy-writer-details-box"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"details-title pk-1px-b"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>返水详情<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>span @click<span class="token operator">=</span><span class="token string">"isShowBackwaterMask = false;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"iconfont icon-sykszz-close"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"details-content"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>dl<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>dt <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pk-1px-b"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>游戏名称<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>有效打码<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>返水金额<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>dt<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"scorll-list"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>dd v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item,index) in infoData.listList"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pk-1px-b"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>platformname<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>betall<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>money<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>dd<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>dl<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content-fixed"</span> v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"infoData.betall&gt;0"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"backwater-top"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>有效打码<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>p v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"!isShowBackWaterMoney"</span><span class="token operator">&gt;</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>p v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"isShowBackWaterMoney"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>infoData<span class="token punctuation">.</span>betall<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>返水金额<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>p v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"!isShowBackWaterMoney"</span><span class="token operator">&gt;</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>p v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"isShowBackWaterMoney"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>infoData<span class="token punctuation">.</span>allmoney<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"backwater-top-btn"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>div v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"isShowBackWaterMoney"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"look"</span> @click<span class="token operator">=</span><span class="token string">"isShowBackwaterMask = true"</span><span class="token operator">&gt;</span>点击查看返水详情<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"getBackWaterInfo()"</span><span class="token operator">&gt;</span>查看返水额<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>button <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"infoData.status === 2 || !isShowBackWaterMoney"</span> @click<span class="token operator">=</span><span class="token string">"handleBackWater"</span><span class="token operator">&gt;</span>领取返水<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"list.length&gt;0"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"backwater-list"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">&gt;</span>自助返水历史<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"total pk-1px-b"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>当日已返水：<span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>today<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>本周返水额：<span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>week<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>dl<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>dt <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pk-1px-b"</span><span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>有效打码<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>返水金额<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>dt<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>dl<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"page-loadmore"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"page-loadmore-wrapper"</span> ref<span class="token operator">=</span><span class="token string">"wrapper"</span> <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"{ height: wrapperHeight + 'px' }"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>pk<span class="token operator">-</span>loadmore <span class="token operator">:</span>top<span class="token operator">-</span>method<span class="token operator">=</span><span class="token string">"loadTop"</span> <span class="token operator">:</span>bottom<span class="token operator">-</span>method<span class="token operator">=</span><span class="token string">"loadBottom"</span> <span class="token operator">:</span>bottom<span class="token operator">-</span>all<span class="token operator">-</span>loaded<span class="token operator">=</span><span class="token string">"allLoaded"</span> @top<span class="token operator">-</span>status<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleTopChange"</span> @bottom<span class="token operator">-</span>status<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">"handleBottomChange"</span> ref<span class="token operator">=</span><span class="token string">"loadmore"</span> <span class="token operator">:</span>stop<span class="token operator">-</span>translate<span class="token operator">=</span><span class="token string">"stopTranslate"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item,index) in list"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"pk-1px-b"</span><span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>                                    <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>betall<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                                    <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>rebatewater<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>                                    <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>订单号：<span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>orderid<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                                    <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>createtime <span class="token operator">|</span> filterDate<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"nodata"</span> v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"hasData"</span><span class="token operator">&gt;</span>我是有底线的<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>pk<span class="token operator">-</span>loadmore<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"infoData.betall&lt;=0"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"no-data"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"no-data-box"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"iconfont icon-list-zanwusj"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>您暂时还未获得返水哦<span class="token operator">~</span><span class="token operator">~</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>button<span class="token operator">&gt;</span>去投注，获得返水！<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token keyword">import</span> pkLoadmore <span class="token keyword">from</span> <span class="token string">'../../../components/Loadmore'</span>    <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'../../../components/Header'</span>    <span class="token keyword">const</span> backwater <span class="token operator">=</span> proto<span class="token punctuation">.</span>pb<span class="token punctuation">;</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>        name<span class="token operator">:</span> <span class="token string">'backwater'</span><span class="token punctuation">,</span>        components<span class="token operator">:</span> <span class="token punctuation">{</span>            Header<span class="token punctuation">,</span>            pkLoadmore        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBackWaterInfo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        watch<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">isShowBackwaterMask</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ModalHelper<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ModalHelper<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                isShowBackwaterMask<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                allLoaded<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                topStatus<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                bottomStatus<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                wrapperHeight<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                stopTranslate<span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">HTML_FONT_SIZE</span> <span class="token operator">*</span> <span class="token number">1.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                hasData<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                page<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//当前页数</span>                pageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">//每页请求的条数</span>                totalNum<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//总页数</span>                list<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                infoData<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                today<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                week<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                isShowBackWaterMoney<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token comment">//获取返水列表</span>            <span class="token function">getList</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> posts <span class="token operator">=</span> <span class="token punctuation">{</span>                    page<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page<span class="token punctuation">,</span>                    pageSize<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>                <span class="token punctuation">}</span>                <span class="token keyword">let</span> pageData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">backwater<span class="token punctuation">.</span>PageParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                pageData<span class="token punctuation">.</span><span class="token function">setPage</span><span class="token punctuation">(</span>posts<span class="token punctuation">.</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>                pageData<span class="token punctuation">.</span><span class="token function">setPagesize</span><span class="token punctuation">(</span>posts<span class="token punctuation">.</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> postData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">backwater<span class="token punctuation">.</span>BackWaterReq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                postData<span class="token punctuation">.</span><span class="token function">setPageparams</span><span class="token punctuation">(</span>pageData<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> datas <span class="token operator">=</span> postData<span class="token punctuation">.</span><span class="token function">serializeBinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">"PURSE_BACK_WATER_LIST"</span><span class="token punctuation">,</span> backwater<span class="token punctuation">.</span>BackWaterResp<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>today <span class="token operator">=</span> res<span class="token punctuation">.</span>today<span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>week <span class="token operator">=</span> res<span class="token punctuation">.</span>week<span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>totalNum <span class="token operator">=</span> res<span class="token punctuation">.</span>totalnum<span class="token punctuation">;</span>                    <span class="token keyword">let</span> result <span class="token operator">=</span> res<span class="token punctuation">.</span>listList<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> result<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$toast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                            message<span class="token operator">:</span> <span class="token string">'刷新成功'</span><span class="token punctuation">,</span>                            duration<span class="token operator">:</span> <span class="token number">2000</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>wrapperHeight <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>wrapper<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment">//获取返水金额以及是否能返水</span>            <span class="token function">getBackWaterInfo</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">"PURSE_BACK_WATER_INFO"</span><span class="token punctuation">,</span> backwater<span class="token punctuation">.</span>BackWaterInfoResp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>infoData <span class="token operator">=</span> res<span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isShowBackWaterMoney <span class="token operator">=</span> <span class="token operator">!</span>t<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment">//领取返水</span>            <span class="token function">handleBackWater</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">"PURSE_BACK_WATER_RECEIVE"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$toast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                        message<span class="token operator">:</span> <span class="token string">'领取成功'</span><span class="token punctuation">,</span>                        duration<span class="token operator">:</span> <span class="token number">2000</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBackWaterInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment">//下拉刷新</span>            <span class="token function">handleTopChange</span><span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>topStatus <span class="token operator">=</span> status<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">loadTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>hasData <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>loadmore<span class="token punctuation">.</span><span class="token function">onTopLoaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>allLoaded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment">//mint-ui 上拉加载</span>            <span class="token function">handleBottomChange</span><span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>bottomStatus <span class="token operator">=</span> status<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">loadBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>hasData <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>loadmore<span class="token punctuation">.</span><span class="token function">onBottomLoaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>allLoaded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//所有数据加载完成</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>hasData <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"less"</span> scoped<span class="token operator">&gt;</span>    @<span class="token keyword">import</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'../../../components/less/common.less'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span>no<span class="token operator">-</span>data <span class="token punctuation">{</span>        padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span><span class="token punctuation">;</span>       <span class="token punctuation">.</span>no<span class="token operator">-</span>data<span class="token operator">-</span>box <span class="token punctuation">{</span>            margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">2.13333</span>rem<span class="token comment">/* 160/75 */</span><span class="token punctuation">;</span>            text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>            i<span class="token punctuation">{</span>                font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">2.53333</span>rem <span class="token comment">/* 190/75 */</span><span class="token punctuation">;</span>                color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">8976</span>cc<span class="token punctuation">;</span>                opacity<span class="token operator">:</span> <span class="token number">.6</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            p <span class="token punctuation">{</span>                text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>                font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.42667</span>rem<span class="token comment">/* 32/75 */</span>                <span class="token punctuation">;</span>                color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">8976</span>cc<span class="token punctuation">;</span>                margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">.26667</span>rem<span class="token comment">/* 20/75 */</span>                <span class="token punctuation">;</span>            <span class="token punctuation">}</span>            button <span class="token punctuation">{</span>                width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>                height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>                <span class="token punctuation">;</span>                line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>                <span class="token punctuation">;</span>                color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>                text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>                border<span class="token operator">:</span> none<span class="token punctuation">;</span>                border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">.13333</span>rem<span class="token comment">/* 10/75 */</span>                <span class="token punctuation">;</span>                font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.37333</span>rem<span class="token comment">/* 28/75 */</span>                <span class="token punctuation">;</span>                background<span class="token operator">:</span> @color<span class="token operator">-</span>green<span class="token punctuation">;</span>                box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span>px <span class="token number">2</span>px <span class="token number">5</span>px <span class="token number">0</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">.53333</span>rem<span class="token comment">/* 40/75 */</span>                <span class="token punctuation">;</span>                <span class="token operator">&amp;</span><span class="token operator">:</span>active <span class="token punctuation">{</span>                    background<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">00</span>cc8f<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            button<span class="token punctuation">.</span>look <span class="token punctuation">{</span>                margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span>                <span class="token punctuation">;</span>                background<span class="token operator">:</span> #fff<span class="token punctuation">;</span>                border<span class="token operator">:</span> <span class="token number">1</span>px solid @color<span class="token operator">-</span>green<span class="token punctuation">;</span>                color<span class="token operator">:</span> @color<span class="token operator">-</span>green<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span>content <span class="token punctuation">{</span>        <span class="token punctuation">.</span>content<span class="token operator">-</span>fixed <span class="token punctuation">{</span>            position<span class="token operator">:</span> fixed<span class="token punctuation">;</span>            width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>            top<span class="token operator">:</span> <span class="token number">1.22667</span>rem<span class="token comment">/* 92/75 */</span>            <span class="token punctuation">;</span>            left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>backwater<span class="token operator">-</span>top <span class="token punctuation">{</span>            position<span class="token operator">:</span> relative<span class="token punctuation">;</span>            ul <span class="token punctuation">{</span>                background<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">252232</span><span class="token punctuation">;</span>                display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>around<span class="token punctuation">;</span>                text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>                height<span class="token operator">:</span> <span class="token number">3.41333</span>rem<span class="token comment">/* 256/75 */</span>                <span class="token punctuation">;</span>                padding<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">.74667</span>rem<span class="token comment">/* 56/75 */</span>                <span class="token punctuation">;</span>                li <span class="token punctuation">{</span>                    flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                    display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                    flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span>                    h2 <span class="token punctuation">{</span>                        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span>                        <span class="token punctuation">;</span>                        color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>                        font<span class="token operator">-</span>weight<span class="token operator">:</span> normal<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    p <span class="token punctuation">{</span>                        margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">.44</span>rem<span class="token comment">/* 33/75 */</span>                        <span class="token punctuation">;</span>                        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.48</span>rem<span class="token comment">/* 36/75 */</span>                        <span class="token punctuation">;</span>                        color<span class="token operator">:</span> @color<span class="token operator">-</span>green<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token punctuation">.</span>backwater<span class="token operator">-</span>top<span class="token operator">-</span>btn <span class="token punctuation">{</span>                position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>                bottom<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">.53333</span>rem<span class="token comment">/* 40/75 */</span>                <span class="token punctuation">;</span>                width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>                display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span>                justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>around<span class="token punctuation">;</span>                <span class="token punctuation">.</span>look <span class="token punctuation">{</span>                    font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.37333</span>rem<span class="token comment">/* 28/75 */</span>                    <span class="token punctuation">;</span>                    color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">8976</span>cc<span class="token punctuation">;</span>                    text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>                    margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span>                    <span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token punctuation">.</span>btn <span class="token punctuation">{</span>                    display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                    justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>around<span class="token punctuation">;</span>                    button <span class="token punctuation">{</span>                        width<span class="token operator">:</span> <span class="token number">3.2</span>rem<span class="token comment">/* 240/75 */</span>                        <span class="token punctuation">;</span>                        height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>                        <span class="token punctuation">;</span>                        <span class="token punctuation">;</span>                        line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>                        <span class="token punctuation">;</span>                        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.37333</span>rem<span class="token comment">/* 28/75 */</span>                        <span class="token punctuation">;</span>                        border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">.13333</span>rem<span class="token comment">/* 10/75 */</span>                        <span class="token punctuation">;</span>                        border<span class="token operator">:</span> none<span class="token punctuation">;</span>                        background<span class="token operator">:</span> @color<span class="token operator">-</span>green<span class="token punctuation">;</span>                        color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">252232</span><span class="token punctuation">;</span>                        box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span>px <span class="token number">2</span>px <span class="token number">5</span>px <span class="token number">0</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span><span class="token operator">:</span>last<span class="token operator">-</span>child <span class="token punctuation">{</span>                            color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        <span class="token operator">&amp;</span><span class="token operator">:</span>disabled <span class="token punctuation">{</span>                            background<span class="token operator">:</span> @color<span class="token operator">-</span>add9cc<span class="token punctuation">;</span>                            box<span class="token operator">-</span>shadow<span class="token operator">:</span> none<span class="token punctuation">;</span>                            color<span class="token operator">:</span> @color<span class="token operator">-</span>c8c8cc<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>backwater<span class="token operator">-</span>list <span class="token punctuation">{</span>            margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">.53333</span>rem<span class="token comment">/* 40/75 */</span>            <span class="token punctuation">;</span>            <span class="token punctuation">.</span>title <span class="token punctuation">{</span>                line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>                <span class="token punctuation">;</span>                padding<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span>                <span class="token punctuation">;</span>                font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.42667</span>rem<span class="token comment">/* 32/75 */</span>                <span class="token punctuation">;</span>                color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">323233</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token punctuation">.</span>total <span class="token punctuation">{</span>                background<span class="token operator">:</span> #fff<span class="token punctuation">;</span>                padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span>                <span class="token punctuation">;</span>                height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>                <span class="token punctuation">;</span>                display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>                align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>                p <span class="token punctuation">{</span>                    font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.37333</span>rem<span class="token comment">/* 28/75 */</span>                    <span class="token punctuation">;</span>                    color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">646466</span><span class="token punctuation">;</span>                    span <span class="token punctuation">{</span>                        color<span class="token operator">:</span> @color<span class="token operator">-</span>green<span class="token punctuation">;</span>                        font<span class="token operator">-</span>weight<span class="token operator">:</span> bold<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            dl <span class="token punctuation">{</span>                background<span class="token operator">:</span> #fff<span class="token punctuation">;</span>                padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span>                <span class="token punctuation">;</span>                dt <span class="token punctuation">{</span>                    padding<span class="token operator">:</span> <span class="token number">.33333</span>rem<span class="token comment">/* 25/75 */</span>                    <span class="token number">0</span><span class="token punctuation">;</span>                    display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                    justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>                    font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.42667</span>rem<span class="token comment">/* 32/75 */</span>                    <span class="token punctuation">;</span>                    color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">323233</span><span class="token punctuation">;</span>                    font<span class="token operator">-</span>weight<span class="token operator">:</span> bold<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>page<span class="token operator">-</span>loadmore <span class="token punctuation">{</span>            position<span class="token operator">:</span> fixed<span class="token punctuation">;</span>            top<span class="token operator">:</span> <span class="token number">9.14667</span>rem<span class="token comment">/* 686/75 */</span>            <span class="token punctuation">;</span>            left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            ul <span class="token punctuation">{</span>                background<span class="token operator">:</span> #fff<span class="token punctuation">;</span>                padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">.4</span>rem<span class="token comment">/* 30/75 */</span>                <span class="token punctuation">;</span>                li <span class="token punctuation">{</span>                    padding<span class="token operator">:</span> <span class="token number">.33333</span>rem<span class="token comment">/* 25/75 */</span>                    <span class="token number">0</span><span class="token punctuation">;</span>                    h2 <span class="token punctuation">{</span>                        display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                        justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>                        color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">323233</span><span class="token punctuation">;</span>                        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.37333</span>rem<span class="token comment">/* 28/75 */</span>                        <span class="token punctuation">;</span>                        font<span class="token operator">-</span>weight<span class="token operator">:</span> bold<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    p <span class="token punctuation">{</span>                        display<span class="token operator">:</span> flex<span class="token punctuation">;</span>                        justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>                        color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">969699</span><span class="token punctuation">;</span>                        margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">.26667</span>rem<span class="token comment">/* 20/75 */</span>                        <span class="token punctuation">;</span>                        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">.32</span>rem<span class="token comment">/* 24/75 */</span>                        <span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="17-抠出mint-ui-datePicker-源码"><a href="#17-抠出mint-ui-datePicker-源码" class="headerlink" title="17.抠出mint-ui datePicker 源码"></a>17.抠出mint-ui datePicker 源码</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>mt<span class="token operator">-</span>popup v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"visible"</span> <span class="token operator">:</span>closeOnClickModal<span class="token operator">=</span><span class="token string">"closeOnClickModal"</span> position<span class="token operator">=</span><span class="token string">"bottom"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-datetime"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"popup-title pk-1px-b"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>span @click<span class="token operator">=</span><span class="token string">"visible = false;$emit('cancel')"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>cancelText<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>titleText<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>span @click<span class="token operator">=</span><span class="token string">"confirm"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>confirmText<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>mt<span class="token operator">-</span>picker <span class="token operator">:</span>itemHeight<span class="token operator">=</span><span class="token string">"itemHeight"</span> <span class="token operator">:</span>slots<span class="token operator">=</span><span class="token string">"dateSlots"</span> @change<span class="token operator">=</span><span class="token string">"onChange"</span> <span class="token operator">:</span>visible<span class="token operator">-</span>item<span class="token operator">-</span>count<span class="token operator">=</span><span class="token string">"visibleItemCount"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"mint-datetime-picker"</span> ref<span class="token operator">=</span><span class="token string">"picker"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>mt<span class="token operator">-</span>picker<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>mt<span class="token operator">-</span>popup<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"less"</span><span class="token operator">&gt;</span>    @<span class="token keyword">import</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"./less/common.less"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span>popup<span class="token operator">-</span>title <span class="token punctuation">{</span>        height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>        <span class="token punctuation">;</span>        padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">0.4</span>rem<span class="token comment">/* 30/75 */</span>        <span class="token punctuation">;</span>        font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">0.4</span>rem<span class="token comment">/* 30/75 */</span>        <span class="token punctuation">;</span>        color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">323233</span><span class="token punctuation">;</span>        text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>        display<span class="token operator">:</span> flex<span class="token punctuation">;</span>        justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>        align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>        span <span class="token punctuation">{</span>            flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>            height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>            <span class="token punctuation">;</span>            line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1.06667</span>rem<span class="token comment">/* 80/75 */</span>            <span class="token punctuation">;</span>        <span class="token punctuation">}</span>        span<span class="token operator">:</span>first<span class="token operator">-</span>child <span class="token punctuation">{</span>            color<span class="token operator">:</span> @color<span class="token operator">-</span><span class="token number">323233</span><span class="token punctuation">;</span>            text<span class="token operator">-</span>align<span class="token operator">:</span> left<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        span<span class="token operator">:</span>last<span class="token operator">-</span>child <span class="token punctuation">{</span>            color<span class="token operator">:</span> @color<span class="token operator">-</span>green<span class="token punctuation">;</span>            text<span class="token operator">-</span>align<span class="token operator">:</span> right<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token keyword">const</span> <span class="token constant">FORMAT_MAP</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token constant">Y</span><span class="token operator">:</span> <span class="token string">"year"</span><span class="token punctuation">,</span>        <span class="token constant">M</span><span class="token operator">:</span> <span class="token string">"month"</span><span class="token punctuation">,</span>        <span class="token constant">D</span><span class="token operator">:</span> <span class="token string">"date"</span><span class="token punctuation">,</span>        <span class="token constant">H</span><span class="token operator">:</span> <span class="token string">"hour"</span><span class="token punctuation">,</span>        m<span class="token operator">:</span> <span class="token string">"minute"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>        name<span class="token operator">:</span> <span class="token string">"mt-datetime-picker"</span><span class="token punctuation">,</span>        props<span class="token operator">:</span> <span class="token punctuation">{</span>            titleText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"请选择时间"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            cancelText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"取消"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            confirmText<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"确定"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            type<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"datetime"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            startDate<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Date<span class="token punctuation">,</span>                <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            endDate<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Date<span class="token punctuation">,</span>                <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            startHour<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            endHour<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">23</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            yearFormat<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"{value}"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            monthFormat<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"{value}"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            dateFormat<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"{value}"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            hourFormat<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"{value}"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            minuteFormat<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> String<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"{value}"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            visibleItemCount<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Number<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">5</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            closeOnClickModal<span class="token operator">:</span> <span class="token punctuation">{</span>                type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">true</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            value<span class="token operator">:</span> <span class="token keyword">null</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                startYear<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                endYear<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                startMonth<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                endMonth<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                startDay<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                endDay<span class="token operator">:</span> <span class="token number">31</span><span class="token punctuation">,</span>                currentValue<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                selfTriggered<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                dateSlots<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                shortMonthDates<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                longMonthDates<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                febDates<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                leapFebDates<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                itemHeight<span class="token operator">:</span> <span class="token number">36</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        methods<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">isLeapYear</span><span class="token punctuation">(</span><span class="token parameter">year</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> year <span class="token operator">%</span> <span class="token number">400</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span>year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">isShortMonth</span><span class="token punctuation">(</span><span class="token parameter">month</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getMonthEndDay</span><span class="token punctuation">(</span><span class="token parameter">year<span class="token punctuation">,</span> month</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isShortMonth</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token number">30</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>month <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLeapYear</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">29</span> <span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token number">31</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getTrueValue</span><span class="token punctuation">(</span><span class="token parameter">formattedValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>formattedValue<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>formattedValue<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    formattedValue <span class="token operator">=</span> formattedValue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>formattedValue<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> value<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"time"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    value <span class="token operator">=</span> values                        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTrueValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">let</span> year <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTrueValue</span><span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">let</span> month <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTrueValue</span><span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTrueValue</span><span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">let</span> maxDate <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonthEndDay</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>date <span class="token operator">&gt;</span> maxDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>selfTriggered <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                        date <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">let</span> hour <span class="token operator">=</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>typeStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"H"</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTrueValue</span><span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>typeStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"H"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span>                        <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token keyword">let</span> minute <span class="token operator">=</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>typeStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"m"</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTrueValue</span><span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>typeStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"m"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span>                        <span class="token number">0</span><span class="token punctuation">;</span>                    value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> date<span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> value<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">picker</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> values <span class="token operator">=</span> picker<span class="token punctuation">.</span>$children                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> child<span class="token punctuation">.</span>currentValue <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> child<span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selfTriggered<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>selfTriggered <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleValueChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">fillValues</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>                            <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">FORMAT_MAP</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">Format</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>                                <span class="token string">"{value}"</span><span class="token punctuation">,</span>                                <span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>                            <span class="token punctuation">)</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">FORMAT_MAP</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">Format</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"{value}"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> values<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">pushSlots</span><span class="token punctuation">(</span><span class="token parameter">slots<span class="token punctuation">,</span> type<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                slots<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                    values<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fillValues</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">generateSlots</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> dateSlots <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> <span class="token constant">INTERVAL_MAP</span> <span class="token operator">=</span> <span class="token punctuation">{</span>                    <span class="token constant">Y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rims<span class="token punctuation">.</span>year<span class="token punctuation">,</span>                    <span class="token constant">M</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rims<span class="token punctuation">.</span>month<span class="token punctuation">,</span>                    <span class="token constant">D</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rims<span class="token punctuation">.</span>date<span class="token punctuation">,</span>                    <span class="token constant">H</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rims<span class="token punctuation">.</span>hour<span class="token punctuation">,</span>                    m<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rims<span class="token punctuation">.</span>min                <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> typesArr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>typeStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                typesArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">type</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">INTERVAL_MAP</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pushSlots</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>                            <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>dateSlots<span class="token punctuation">,</span> type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token constant">INTERVAL_MAP</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>typeStr <span class="token operator">===</span> <span class="token string">"Hm"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    dateSlots<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                        divider<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                        content<span class="token operator">:</span> <span class="token string">":"</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>dateSlots <span class="token operator">=</span> dateSlots<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleExceededValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">handleExceededValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"time"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">const</span> currentValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    values <span class="token operator">=</span> <span class="token punctuation">[</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>hourFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"{value}"</span><span class="token punctuation">,</span> currentValue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>minuteFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"{value}"</span><span class="token punctuation">,</span> currentValue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    <span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    values <span class="token operator">=</span> <span class="token punctuation">[</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>yearFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"{value}"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>monthFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>                            <span class="token string">"{value}"</span><span class="token punctuation">,</span>                            <span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>dateFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>                            <span class="token string">"{value}"</span><span class="token punctuation">,</span>                            <span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>                        <span class="token punctuation">)</span>                    <span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"datetime"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>hourFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>                                <span class="token string">"{value}"</span><span class="token punctuation">,</span>                                <span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHour</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>                            <span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>minuteFormat<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>                                <span class="token string">"{value}"</span><span class="token punctuation">,</span>                                <span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMinute</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>                            <span class="token punctuation">)</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>dateSlots                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> child<span class="token punctuation">.</span>values <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">slot</span> <span class="token operator">=&gt;</span> slot<span class="token punctuation">.</span>values<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">slotValues<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>slotValues<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>values<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            values<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> slotValues<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSlotsByValues</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">setSlotsByValues</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">const</span> setSlotValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>picker<span class="token punctuation">.</span>setSlotValue<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"time"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">setSlotValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setSlotValue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">"time"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">setSlotValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setSlotValue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setSlotValue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"datetime"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">setSlotValue</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">setSlotValue</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> values<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>picker<span class="token punctuation">.</span>$children<span class="token punctuation">,</span> <span class="token parameter">child</span> <span class="token operator">=&gt;</span>                    child<span class="token punctuation">.</span><span class="token function">doOnValueChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">rimDetect</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> rim</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> position <span class="token operator">=</span> rim <span class="token operator">===</span> <span class="token string">"start"</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> rimDate <span class="token operator">=</span> rim <span class="token operator">===</span> <span class="token string">"start"</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startDate <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>endDate<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span> <span class="token operator">===</span> rimDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    result<span class="token punctuation">.</span>month<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> rimDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span> <span class="token operator">===</span> rimDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        result<span class="token punctuation">.</span>date<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> rimDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span> <span class="token operator">===</span> rimDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            result<span class="token punctuation">.</span>hour<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> rimDate<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHour</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span> <span class="token operator">===</span> rimDate<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                result<span class="token punctuation">.</span>min<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> rimDate<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">isDateString</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\d{4}(\-|\/|.)\d{1,2}\1\d{1,2}</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getYear</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isDateString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span>                    value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-|\/|\.</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span>                    value<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isDateString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span>                    value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-|\/|\.</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span>                    value<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isDateString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span>                    value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-|\/|\.</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">:</span>                    value<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getHour</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isDateString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">const</span> str <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">"00:00:00"</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">getMinute</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isDateString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">const</span> str <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">"00:00:00"</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"confirm"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">handleValueChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        computed<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">rims</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span>                    <span class="token keyword">return</span> <span class="token punctuation">{</span>                        year<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        month<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        date<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        hour<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        min<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> result<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"time"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    result <span class="token operator">=</span> <span class="token punctuation">{</span>                        hour<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>startHour<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>endHour<span class="token punctuation">]</span><span class="token punctuation">,</span>                        min<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">]</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> result<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                result <span class="token operator">=</span> <span class="token punctuation">{</span>                    year<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>startDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>endDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    month<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    date<span class="token operator">:</span> <span class="token punctuation">[</span>                        <span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonthEndDay</span><span class="token punctuation">(</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentValue<span class="token punctuation">)</span>                        <span class="token punctuation">)</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    hour<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    min<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">]</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rimDetect</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rimDetect</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> result<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">typeStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"time"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token string">"Hm"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"date"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token string">"YMD"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token string">"YMDHm"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        watch<span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue <span class="token operator">=</span> val<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">rims</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateSlots</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">visible</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"visible-change"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>itemHeight <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">HTML_FONT_SIZE</span> <span class="token operator">*</span> <span class="token number">1.06667</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//新增的</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"date"</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startDate<span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>currentValue <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startHour<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:00</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateSlots</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 处理如何优雅的处理复杂判断</title>
      <link href="/2020/03/02/js-chu-li-ru-he-you-ya-de-chu-li-fu-za-pan-duan/"/>
      <url>/2020/03/02/js-chu-li-ru-he-you-ya-de-chu-li-fu-za-pan-duan/</url>
      
        <content type="html"><![CDATA[<h3 id="1-基本if-else-逻辑判断"><a href="#1-基本if-else-逻辑判断" class="headerlink" title="1.基本if else 逻辑判断"></a>1.基本if else 逻辑判断</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> sex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">let</span> sexText <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>sex <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  sexText <span class="token operator">=</span> <span class="token string">'男'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sex <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  sexText <span class="token operator">=</span> <span class="token string">'女'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>  sexText <span class="token operator">=</span> <span class="token string">'其他'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-switch-case"><a href="#2-switch-case" class="headerlink" title="2.switch/case"></a>2.switch/case</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">getStatusText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>      str<span class="token operator">=</span><span class="token string">"待开通"</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>      str<span class="token operator">=</span><span class="token string">"开通准备中"</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>      str<span class="token operator">=</span><span class="token string">"开通准备完成"</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>      str<span class="token operator">=</span><span class="token string">"已过期"</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token keyword">return</span> str<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-三元表达式"><a href="#3-三元表达式" class="headerlink" title="3.三元表达式"></a>3.三元表达式</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> sex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">let</span> sexText <span class="token operator">=</span> sex <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">'男'</span> <span class="token operator">:</span> sex <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">'女'</span><span class="token operator">:</span> <span class="token string">'其他'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><span id="more"></span><h3 id="4-短路-amp-amp-与"><a href="#4-短路-amp-amp-与" class="headerlink" title="4.短路 &amp;&amp; 与 ||"></a>4.短路 &amp;&amp; 与 ||</h3><blockquote><p>&amp;&amp; 中第一个表达式为假就不会去处理第二个表达式，|| 则相反</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// if为真</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span> <span class="token punctuation">{</span> value <span class="token operator">=</span> <span class="token function">getValueTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// &amp;&amp;改版</span>bool <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token function">getValueTrue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// if为假</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bool<span class="token punctuation">)</span> <span class="token punctuation">{</span> value <span class="token operator">=</span> <span class="token function">getValueFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// || 改版</span>bool <span class="token operator">||</span> <span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token function">getValueFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-对象-或-数组"><a href="#5-对象-或-数组" class="headerlink" title="5.对象 或 数组"></a>5.对象 或 数组</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">getStatusText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> statusObj <span class="token operator">=</span> <span class="token punctuation">{</span>     <span class="token number">1</span><span class="token operator">:</span> <span class="token string">'待开通'</span><span class="token punctuation">,</span>     <span class="token number">2</span><span class="token operator">:</span> <span class="token string">'开通准备中'</span><span class="token punctuation">,</span>     <span class="token number">3</span><span class="token operator">:</span> <span class="token string">'开通准备完成'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> statusObj<span class="token punctuation">[</span>status<span class="token punctuation">]</span> <span class="token operator">?</span> statusObj<span class="token punctuation">[</span>status<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> <span class="token function-variable function">getStatus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> statusArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'待开通'</span><span class="token punctuation">,</span><span class="token string">'开通准备中'</span><span class="token punctuation">,</span><span class="token string">'开通准备完成'</span><span class="token punctuation">]</span>  <span class="token keyword">return</span> statusArr<span class="token punctuation">[</span>status<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> statusArr<span class="token punctuation">[</span>status<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-includes"><a href="#6-includes" class="headerlink" title="6.includes"></a>6.includes</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>operate <span class="token operator">===</span> <span class="token string">'submitAudit'</span> <span class="token operator">||</span> operate <span class="token operator">===</span> <span class="token string">'cancelUpdate'</span> <span class="token operator">||</span> operate <span class="token operator">===</span> <span class="token string">'uplineApplet'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleOperate</span><span class="token punctuation">(</span>operate<span class="token punctuation">,</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//使用includes</span><span class="token keyword">const</span> actionArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'submitAudit'</span><span class="token punctuation">,</span><span class="token string">'cancelUpdate'</span><span class="token punctuation">,</span><span class="token string">'uplineApplet'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>actionArr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>operate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleOperate</span><span class="token punctuation">(</span>operate<span class="token punctuation">,</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-Map"><a href="#7-Map" class="headerlink" title="7.Map"></a>7.Map</h3><p>假如：</p><p>‘待开通’ 具有 设置版本setVersion 的操作</p><p>‘开通准备中’ 无操作</p><p>‘开通准备完成’ 具有发布releaseApplet和取消本次开通cancelDredge的操作</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">getStatus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> maps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>   <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'待开通'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'setVersion'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'开通准备中'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'开通准备完成'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'releaseApplet'</span><span class="token punctuation">,</span><span class="token string">'cancelDredge'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> action <span class="token operator">=</span> maps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>    statusText<span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>    statusFn<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">}</span>  obj<span class="token punctuation">.</span>statusText <span class="token operator">=</span> action<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//  ["待开通"]</span>  obj<span class="token punctuation">.</span>statusFn <span class="token operator">=</span> action<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// ['setVersion']</span>  <span class="token keyword">return</span> obj<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// { statusText: "开通准备中",statusFn: [] }</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他复杂的Map用法可以参看这篇<a href="https://segmentfault.com/a/1190000017105791">文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 浏览器新开窗口的正确方式</title>
      <link href="/2020/02/16/javascript-liu-lan-qi-xin-kai-chuang-kou-de-zheng-que-fang-shi/"/>
      <url>/2020/02/16/javascript-liu-lan-qi-xin-kai-chuang-kou-de-zheng-que-fang-shi/</url>
      
        <content type="html"><![CDATA[<p>前端项目开发过程中，网页里的a标签默认在当前窗口跳转链接地址，如果需要在新窗口打开，需要给 a 标签添加一个<code>target="_blank"</code>属性。 例：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>a target<span class="token operator">=</span><span class="token string">"_blank"</span> href<span class="token operator">=</span><span class="token string">"https://weibo.com/"</span><span class="token operator">&gt;</span>打开微博页面<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-安全问题"><a href="#1-安全问题" class="headerlink" title="1.安全问题"></a>1.安全问题</h3><p>如果只是加上 <code>target=“_blank'</code>，在打开新窗口之后，新页面可以通过 <code>window.opener</code> 来获取到来源页面的 <code>window</code> 对象，即使是跨域状态也一样。<br>某些属性的访问被拦截，是因为跨域安全策略的限制。但是，如果我修改 <code>window.opener.location</code> 的值，指向另外一个地址。即可以造成刚刚还在某个网站浏览，随后点击链接新开的窗口，但是这个新开的窗口在神不知鬼不觉的情况下，把原来的网页地址改了，再通过页面伪装，例如伪装成登录页等，来让用户输入账号密码登录，从而达到黑客不可告人的目的。</p><h3 id="2-性能问题"><a href="#2-性能问题" class="headerlink" title="2.性能问题"></a>2.性能问题</h3><p>通过 <code>target="_blank"</code> 打开的新窗口，跟原来的页面窗口共用一个进程。如果这个新页面执行了一大堆性能不好的 JavaScript 代码，占用了大量系统资源，那你原来的页面的性能也会收到影响。</p><span id="more"></span><h3 id="3-解决办法"><a href="#3-解决办法" class="headerlink" title="3.解决办法"></a>3.解决办法</h3><p>1.尽量不使用 <code>target="_blank"</code><br>2.如果一定要用，需要加上 <code>rel=”noopener“</code> 或者 <code>rel=“noreferrer”</code> ,这样新开窗口的 <code>window.openner</code> 就为<code>null</code>，而且会让新窗口运行在独立的进程里，不会拖累原来页面的进程。(不过，有些浏览器对性能做了优化，即使不加这个属性，新窗口也会在独立进程打开。不过为了安全考虑，还是加上吧。)</p><h4 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h4>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js常用操作-other</title>
      <link href="/2019/05/24/js-chang-yong-cao-zuo-other/"/>
      <url>/2019/05/24/js-chang-yong-cao-zuo-other/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串去空格"><a href="#字符串去空格" class="headerlink" title="字符串去空格"></a>字符串去空格</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> <span class="token function-variable function">trimSpace</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span>is_global</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> result<span class="token punctuation">;</span>    result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^\s+)|(\s+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>is_global <span class="token operator">&amp;&amp;</span> is_global<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">"g"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取url参数值"><a href="#获取url参数值" class="headerlink" title="获取url参数值"></a>获取url参数值</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getQueryVal</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> url <span class="token operator">=</span> url <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"?"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> url <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> o<span class="token punctuation">}</span>    arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> ar<span class="token operator">=</span>x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        o<span class="token punctuation">[</span>ar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>ar<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> o<span class="token punctuation">}</span>eg<span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getQueryVal</span><span class="token punctuation">(</span><span class="token string">"http://192.168.28.50.9090/#/twitterInfo?isNeed=0&amp;userType=c"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//{isNeed: "0", userType: "c"}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="vue里面使用hash模式获取url参数值"><a href="#vue里面使用hash模式获取url参数值" class="headerlink" title="vue里面使用hash模式获取url参数值"></a>vue里面使用hash模式获取url参数值</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** *  name [参数名称] */</span><span class="token keyword">let</span> <span class="token function-variable function">getHashString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> theRequest <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"?"</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span>  strs <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"?"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            theRequest<span class="token punctuation">[</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">unescape</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token keyword">in</span> theRequest<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>name<span class="token operator">==</span>j<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> theRequest<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>eg<span class="token operator">:</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getHashString</span><span class="token punctuation">(</span><span class="token string">"userType"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// c</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><h3 id="history模式获取url参数值"><a href="#history模式获取url参数值" class="headerlink" title="history模式获取url参数值"></a>history模式获取url参数值</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * name [参数名称] */</span><span class="token keyword">let</span> <span class="token function-variable function">getQueryString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">"(^|&amp;)"</span><span class="token operator">+</span> name <span class="token operator">+</span><span class="token string">"=([^&amp;]*)(&amp;|$)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> r <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token keyword">return</span>  <span class="token function">unescape</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>eg<span class="token operator">:</span> 当前的url是http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">4000</span><span class="token operator">/</span>home<span class="token operator">/</span>index<span class="token punctuation">.</span>html<span class="token operator">?</span>caseid<span class="token operator">=</span><span class="token number">123</span><span class="token operator">&amp;</span>idx<span class="token operator">=</span><span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getQueryString</span><span class="token punctuation">(</span><span class="token string">"caseid"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数节流"><a href="#函数节流" class="headerlink" title="函数节流"></a>函数节流</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span>delay</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>            <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>delay<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 测试</span><span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hello...'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> func <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span>show<span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 调用</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 连续调用时，没有超过三秒是不会有任何输出的</span><span class="token comment">//hello...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Async-Await是Generator和Promise的组合，完全解决了基于回调的异步"><a href="#Async-Await是Generator和Promise的组合，完全解决了基于回调的异步" class="headerlink" title="Async/Await是Generator和Promise的组合，完全解决了基于回调的异步"></a>Async/Await是Generator和Promise的组合，完全解决了基于回调的异步</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> <span class="token function-variable function">getKeyPromise</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promsie</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type<span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>            url<span class="token operator">:</span> <span class="token string">'http://localhost:3000/apiKey'</span><span class="token punctuation">,</span>            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> key <span class="token operator">=</span> data<span class="token punctuation">;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token function-variable function">getTokenPromise</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promsie</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type<span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>            url<span class="token operator">:</span> <span class="token string">'http://localhost:3000/getToken'</span><span class="token punctuation">,</span>            data<span class="token operator">:</span> <span class="token punctuation">{</span>                key<span class="token operator">:</span> key            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token function-variable function">getDataPromise</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> token <span class="token operator">=</span> data<span class="token punctuation">.</span>token<span class="token punctuation">;</span>    <span class="token keyword">let</span> userId <span class="token operator">=</span> data<span class="token punctuation">.</span>userId<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promsie</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type<span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>            url<span class="token operator">:</span> <span class="token string">'http://localhost:3000/getData'</span><span class="token punctuation">,</span>            data<span class="token operator">:</span> <span class="token punctuation">{</span>                token<span class="token operator">:</span> token<span class="token punctuation">,</span>                userId<span class="token operator">:</span> userId            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getKeyPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> loginData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getTokenPromise</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> busiData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getDataPromise</span><span class="token punctuation">(</span>loginData<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数据：'</span><span class="token punctuation">,</span> busiData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考链接：<a href="https://xuwenliu.github.io/2020/03/11/js/js/">NeverGiveUpT</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js常用操作 - - 数组操作</title>
      <link href="/2019/05/24/js-chang-yong-cao-zuo-shu-zu-cao-zuo/"/>
      <url>/2019/05/24/js-chang-yong-cao-zuo-shu-zu-cao-zuo/</url>
      
        <content type="html"><![CDATA[<p><embed autostart="true" hidden="true" loop="true" src="http://ois5yh1xg.bkt.clouddn.com/%E5%8D%A2%E5%86%A0%E5%BB%B7%E4%B8%80%E7%94%9F%E6%89%80%E7%88%B1.mp3"></p><h2 id="关于js中操作数组的一些方法"><a href="#关于js中操作数组的一些方法" class="headerlink" title="关于js中操作数组的一些方法"></a>关于js中操作数组的一些方法</h2><h3 id="1-锁定数组的长度（让数组的长度变成只读）。"><a href="#1-锁定数组的长度（让数组的长度变成只读）。" class="headerlink" title="1.锁定数组的长度（让数组的长度变成只读）。"></a>1.锁定数组的长度（让数组的长度变成只读）。</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment">//定义一个数组&lt;br&gt;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">"length"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>   writable<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">//将a数组的长度属性设为只读&lt;br&gt;</span>a<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">//将a的长度改为0&lt;br&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//打印a数组的长度，还是3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Array-join-方法，返回一个字符串"><a href="#2-Array-join-方法，返回一个字符串" class="headerlink" title="2.Array.join()方法，返回一个字符串"></a>2.Array.join()方法，返回一个字符串</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1, 2, 3],原数组不改变</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"123",变成字符串</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-Array-reverse-方法，返回逆序数组"><a href="#3-Array-reverse-方法，返回逆序数组" class="headerlink" title="3.Array.reverse()方法，返回逆序数组"></a>3.Array.reverse()方法，返回逆序数组</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> a<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//直接改变a数组的值 返回的是[3,2,1]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-Array-sort-方法，返回排序后的数组。如果数组包含undefined，会被排到数组的尾部。如果不带参数的调用sort-，数组元素以字母表顺序排序。"><a href="#4-Array-sort-方法，返回排序后的数组。如果数组包含undefined，会被排到数组的尾部。如果不带参数的调用sort-，数组元素以字母表顺序排序。" class="headerlink" title="4.Array.sort()方法，返回排序后的数组。如果数组包含undefined，会被排到数组的尾部。如果不带参数的调用sort()，数组元素以字母表顺序排序。"></a>4.Array.sort()方法，返回排序后的数组。如果数组包含undefined，会被排到数组的尾部。如果不带参数的调用sort()，数组元素以字母表顺序排序。</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">1111</span><span class="token punctuation">,</span><span class="token number">444</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             a<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回的结果是[1111, 2, 33, 444]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果要数字从小到大排列：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">1111</span><span class="token punctuation">,</span><span class="token number">444</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             a<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">}</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[2, 33, 444, 1111]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><p>反之，如果从大到小排列，return b-a。</p><h3 id="5-Array-concat-创建并返回一个新数组。"><a href="#5-Array-concat-创建并返回一个新数组。" class="headerlink" title="5.Array.concat(),创建并返回一个新数组。"></a>5.Array.concat(),创建并返回一个新数组。</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回的还是[1,2,3]</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[1,2,3,4,5]</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//返回[1,2,3,4,5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个方法还可以用来复制数组。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[1,2,3]</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[1,2,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-Array-slice-方法，返回指定数组的片段或者子数组。不会改变原数组"><a href="#6-Array-slice-方法，返回指定数组的片段或者子数组。不会改变原数组" class="headerlink" title="6.Array.slice()方法，返回指定数组的片段或者子数组。不会改变原数组"></a>6.Array.slice()方法，返回指定数组的片段或者子数组。不会改变原数组</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>br<span class="token operator">&gt;</span>a<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[1,2,3] 第一个参数是截取开始的位置（包括），第二个参数是截取结束的位置（不包括）</span>             a<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[4,5]</span>             a<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[2,3,4] 负数表示倒数</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[1,2,3,4,5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-Array-splice-方法，用来删除或插入元素，会修改原数组！"><a href="#7-Array-splice-方法，用来删除或插入元素，会修改原数组！" class="headerlink" title="7.Array.splice()方法，用来删除或插入元素，会修改原数组！"></a>7.Array.splice()方法，用来删除或插入元素，会修改原数组！</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//第一个参数是截取的起始位置（包括），第二个参数是截取的个数，之后的参数就是添加在元数组的新值</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[1, 4, 5, 6, 7, 8]</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[2, 3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-push-方法与pop-方法"><a href="#8-push-方法与pop-方法" class="headerlink" title="8.push()方法与pop()方法"></a>8.push()方法与pop()方法</h3><blockquote><p>push()方法在数组的尾部添加一个或者多个元素，并返回数组的新长度。注意的是，改变的是原数组的值，返回的是新数组的长度。<br>pop()方法删除数组的最后一个元素，并返回它的删除值。也是改变原数组，返回的是删除的值。</p></blockquote><h3 id="9-unshift-方法与shift-方法"><a href="#9-unshift-方法与shift-方法" class="headerlink" title="9.unshift()方法与shift()方法"></a>9.unshift()方法与shift()方法</h3><blockquote><p>unshift()方法类似于push()不同的是，他是在数组头部添加，其他都一样<br>shift()方法则类比pop()方法。</p></blockquote><h3 id="10-toString-和toLocaleString"><a href="#10-toString-和toLocaleString" class="headerlink" title="10.toString()和toLocaleString()"></a>10.toString()和toLocaleString()</h3><blockquote><p>toString()方法将每个元素转化为字符串，类似于不传参的join()方法。<br>toLocaleString()方法是toString()的本地化版本。</p></blockquote><h3 id="11-forEach-方法，从头至尾遍历数组，为每个元素调用指定的函数。"><a href="#11-forEach-方法，从头至尾遍历数组，为每个元素调用指定的函数。" class="headerlink" title="11.forEach()方法，从头至尾遍历数组，为每个元素调用指定的函数。"></a>11.forEach()方法，从头至尾遍历数组，为每个元素调用指定的函数。</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>             a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    sum <span class="token operator">+=</span> value<span class="token punctuation">}</span><span class="token punctuation">)</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//sum = 15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-map-方法"><a href="#12-map-方法" class="headerlink" title="12.map()方法"></a>12.map()方法</h3><blockquote><p>和forEach()类似，调用数组的每个元素传递给指定函数，并返回一个数组，所以它和forEach()的区别在于，有一个返回值。不修改原数组，返回的数组长度和原数组相同</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> value<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[2,3,4,5,6]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="13-filter-方法，返回的是调用数组的一个子集。"><a href="#13-filter-方法，返回的是调用数组的一个子集。" class="headerlink" title="13.filter()方法，返回的是调用数组的一个子集。"></a>13.filter()方法，返回的是调用数组的一个子集。</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>             console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[4,5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong><code>注意：</code></strong> 如果使用map()方法，返回的是[false, false, false, true, true]<br>filter()会跳过稀疏数组中缺少的元素，他的返回数组总是稠密的。所以可以用一下方法来压缩稀疏数组的空缺。</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回[1,2,5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="14-every-和some"><a href="#14-every-和some" class="headerlink" title="14.every()和some()"></a>14.every()和some()</h3><blockquote><p>every()方法是只有数组中所以元素都满足某个条件才会返回true；some()方法是只要有满足条件的值，就返回true。以every()方法为例</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             a<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> value <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//true</span>             a<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> value <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="15-indexOf-和lastIndexOf"><a href="#15-indexOf-和lastIndexOf" class="headerlink" title="15.indexOf()和lastIndexOf()"></a>15.indexOf()和lastIndexOf()</h3><p>这两个方法都是用来搜索整个数组中具有给定值的元素，返回找到的第一个元素的索引，如果没找到，则返回-1。<br>区别在于indexOf()从头至尾搜索，而后者则是反向搜索。</p><p>参考链接：<a href="https://www.cnblogs.com/blogs-8888/p/6518683.html">数组操作</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js常用操作 - - 字符串操作</title>
      <link href="/2019/05/24/js-chang-yong-cao-zuo-zi-fu-chuan-cao-zuo/"/>
      <url>/2019/05/24/js-chang-yong-cao-zuo-zi-fu-chuan-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h3 id="js字符串操作"><a href="#js字符串操作" class="headerlink" title="js字符串操作"></a>js字符串操作</h3><h4 id="字符方法"><a href="#字符方法" class="headerlink" title="字符方法"></a>字符方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* charAt方法和charCodeAt方法都接收一个参数，基于0的字符位置 charAt方法是以单字符字符串的形式返回给定位置的那个字符 charCodeAt方法获取到的不是字符而是字符编码 */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"hello world"</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//e </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//101 </span><span class="token comment">//还可以使用方括号加数字索引来访问字符串中特定的字符 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//e </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="字符串操作方法"><a href="#字符串操作方法" class="headerlink" title="字符串操作方法"></a>字符串操作方法</h4><p>concat方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"hello "</span><span class="token punctuation">;</span> <span class="token keyword">var</span> res<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello world </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello  这说明原来字符串的值没有改变 </span><span class="token keyword">var</span> res1<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"nihao"</span><span class="token punctuation">,</span><span class="token string">"!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello nihao!  说明concat方法可以接收任意多个参数 </span><span class="token comment">//虽然concat方法是专门用来拼接字符串的，但是实践中我们使用最多的还是加操作符+，因为其简易便行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="slice方法、substring方法、substr方法"><a href="#slice方法、substring方法、substr方法" class="headerlink" title="slice方法、substring方法、substr方法"></a>slice方法、substring方法、substr方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* slice方法：第一个参数指定子字符串开始位置，第二个参数表示子字符串最后一个字符后面的位置 substring方法：第一个参数指定子字符串开始位置，第二个参数表示子字符串最后一个字符后面的位置 substr方法：第一个参数指定子字符串开始位置，第二个参数表示返回的字符个数 这三个方法都会返回被操作字符串的一个子字符串，都接收一或两个参数 如果没有给这些方法传递第二个参数，则将字符串的长度作为结束位置。这些方法也不会修改字符串本身，只是返回一个基本类型的字符串值     */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"hello world"</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lo world </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lo world </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lo world </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lo w  7表示子字符串最后一个字符后面的位置  简单理解就是包含头不包含尾 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lo w </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lo worl 7表示返回7个字符 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//lo w  -4+11=7表示子字符串最后一个字符后面的位置  简单理解就是包含头不包含尾 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hel  会转换为console.log(str.substring(3,0)); </span><span class="token comment">//此外由于这个方法会将较小数作为开始位置，较大数作为结束位置，所以相当于调用console.log(str.substring(0,3)); </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//""空字符串 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><h4 id="字符串位置方法"><a href="#字符串位置方法" class="headerlink" title="字符串位置方法"></a>字符串位置方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* indexOf方法和lastIndexOf方法都是从一个字符串中搜索给定的子字符串，然后返回子字符串的位置，如果没有找到，则返回-1 indexOf方法是从字符串的开头向后搜索子字符串，lastIndexOf方法正好相反 这两个方法都可以接收两个参数：要查找的子字符串和查找的位置     */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"hello world"</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"o"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"o"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//7 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"o"</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//7 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"o"</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="trim方法"><a href="#trim方法" class="headerlink" title="trim方法"></a>trim方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* trim方法用来删除字符串前后的空格     */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"   hello world   "</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'('</span><span class="token operator">+</span>str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//(hello world) </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'('</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//(   hello world   ) </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="字符串大小写转换方法"><a href="#字符串大小写转换方法" class="headerlink" title="字符串大小写转换方法"></a>字符串大小写转换方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"HELLO world"</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello world </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//HELLO WORLD </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="字符串模式匹配方法"><a href="#字符串模式匹配方法" class="headerlink" title="字符串模式匹配方法"></a>字符串模式匹配方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* match方法：只接受一个参数，由字符串或RegExp对象指定的一个正则表达式 search方法：只接受一个参数，由字符串或RegExp对象指定的一个正则表达式 search方法返回字符串中第一个匹配项的索引，如果没有匹配项，返回-1 */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"cat,bat,sat,fat"</span><span class="token punctuation">;</span> <span class="token keyword">var</span> pattern<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.at</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token keyword">var</span> matches<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//cat </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span>lastIndex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0 </span><span class="token comment">//lastIndex表示开始搜索下一个匹配项的字符位置，从0算起 </span><span class="token keyword">var</span> pos<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">at</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1 1表示at字符串在原来字符串中第一次出现的位置 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="replace方法"><a href="#replace方法" class="headerlink" title="replace方法"></a>replace方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"cat,bat,sat,fat"</span><span class="token punctuation">;</span> <span class="token keyword">var</span> res<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"at"</span><span class="token punctuation">,</span><span class="token string">"one"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一个参数是字符串，所以只会替换第一个子字符串 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//cone,bat,sat,fat </span><span class="token keyword">var</span> res1<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">at</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">"one"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一个参数是正则表达式，所以会替换所有的子字符串 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//cone,bone,sone,fone </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="split方法"><a href="#split方法" class="headerlink" title="split方法"></a>split方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* split方法是基于指定的字符，将字符串分割成字符串数组 当指定的字符为空字符串时，将会分隔整个字符串 */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"red,blue,green,yellow"</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//["red", "blue", "green", "yellow"] </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//["red", "blue"]  第二个参数用来限制数组大小 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^\,]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ["", ",", ",", ",", ""] </span><span class="token comment">//第一项和最后一项为空字符串是因为正则表达式指定的分隔符出现在了子字符串的开头，即"red"和"yellow" </span><span class="token comment">//[^...] 不在方括号内的任意字符  只要不是逗号都是分隔符 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="localeCompare方法"><a href="#localeCompare方法" class="headerlink" title="localeCompare方法"></a>localeCompare方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* 这个方法用于比较两个字符串 1.如果字符串在字母表中应该排在字符串参数之前，则返回一个负数 1.如果字符串等于字符串参数，则返回0 1.如果字符串在字母表中应该排在字符串参数之后，则返回一个正数     */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"yellow"</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span><span class="token string">"brick"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span><span class="token string">"yellow"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span><span class="token string">"zoo"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//-1 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="fromCharCode方法"><a href="#fromCharCode方法" class="headerlink" title="fromCharCode方法"></a>fromCharCode方法</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* fromCharCode方法是接收一或多个字符编码，然后将其转换为字符串 fromCharCode方法是String构造函数的一个静态方法     */</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="找到匹配字符串所在的各个位置"><a href="#找到匹配字符串所在的各个位置" class="headerlink" title="找到匹配字符串所在的各个位置"></a>找到匹配字符串所在的各个位置</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/*找到匹配字符串所在的各个位置*/</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"asadajhjkadaaasdasdasdasd"</span><span class="token punctuation">;</span> <span class="token keyword">var</span> position<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">var</span> pos<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">while</span><span class="token punctuation">(</span>pos<span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     position<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>     pos<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">,</span>pos<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[3, 10, 15, 18, 21, 24]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="字符串去重"><a href="#字符串去重" class="headerlink" title="字符串去重"></a>字符串去重</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//String.split() 执行的操作与 Array.join 执行的操作是相反的 </span><span class="token comment">//split() 方法用于把一个字符串分割成字符串数组。 </span><span class="token comment">//join方法用于将字符串数组连接成一个字符串 </span><span class="token comment">//如果把空字符串 ("") 用作 separator，那么 stringObject 中的每个字符之间都会被分割。 </span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"aahhgggsssjjj"</span><span class="token punctuation">;</span><span class="token comment">//这里字符串没有可以分隔的字符，所以需要使用空字符串作为分隔符 </span><span class="token keyword">function</span> <span class="token function">unique</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">var</span> res<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">var</span> arr<span class="token operator">=</span>msg<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//console.log(arr); </span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">unique</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//ahgsj</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="判断字符串中字符出现的次数"><a href="#判断字符串中字符出现的次数" class="headerlink" title="判断字符串中字符出现的次数"></a>判断字符串中字符出现的次数</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* 1.先实现字符串去重 2.然后对去重后的数组用for循环操作，分别与原始数组中各个值进行比较，如果相等则count++,循环结束将count保存在sum数组中，然后将count重置为0 3.这样一来去重后的数组中的元素在原数组中出现的次数与sum数组中的元素是一一对应的 */</span><span class="token keyword">var</span> str<span class="token operator">=</span><span class="token string">"aacccbbeeeddd"</span><span class="token punctuation">;</span> <span class="token keyword">var</span> sum<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">var</span> res<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">var</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">var</span> arr<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>res<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         count<span class="token operator">++</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     sum<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>     count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//["a", "c", "b", "e", "d"] </span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>res<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">var</span> str<span class="token operator">=</span><span class="token punctuation">(</span>sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string">"偶数"</span><span class="token operator">:</span><span class="token string">"奇数"</span><span class="token punctuation">;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"出现了"</span><span class="token operator">+</span>sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"次"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"出现了"</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">"次"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="阿里面试-字符串操作"><a href="#阿里面试-字符串操作" class="headerlink" title="阿里面试-字符串操作"></a>阿里面试-字符串操作</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">"www.taobao.com"</span><span class="token punctuation">;</span> <span class="token keyword">var</span> res <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'oat'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//moc.oab.www </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>参考链接：<a href="https://www.jb51.net/article/97915.htm">数组操作</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2019/01/23/markdown-yu-fa/"/>
      <url>/2019/01/23/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="关于Markdown"><a href="#关于Markdown" class="headerlink" title="关于Markdown"></a>关于Markdown</h2><blockquote><p>Markdown是一个 Web 上使用的文本到HTML的转换工具，可以通过简单、易读易写的文本格式生成结构化的HTML文档。<br>锤子科技15年8月发布会上，老罗宣布锤子便签支持Markdown语法。我们可大胆预测，使用Markdown语法在移动端编辑会逐渐成为趋势。</p></blockquote><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><blockquote><ul><li>简单标记符完成排版，所写即所见，让你专注于文字而不是排版</li></ul></blockquote><ul><li>纯文本，所以兼容性极强，可以用所有文本编辑器打开</li><li>格式转换方便，Markdown文本可以轻松转换为 html、pdf等</li><li>Markdown 的标记语法有极好的可读性</li></ul><h2 id="Markdown简单语法示例"><a href="#Markdown简单语法示例" class="headerlink" title="Markdown简单语法示例"></a>Markdown简单语法示例</h2><hr><p>主要分为区块元素和区段元素。</p><hr><h3 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h3><h4 id="1-段落和换行"><a href="#1-段落和换行" class="headerlink" title="1.段落和换行"></a>1.段落和换行</h4><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。</p><h4 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h4><p>用#标识符表示，例如：</p><p><code># 一级标题</code><br><code>## 二级标题</code><br><code>### 三级标题</code><br><code>#### 四级标题</code><br><code>##### 五级标题</code></p><h4 id="3-区块引用"><a href="#3-区块引用" class="headerlink" title="3.区块引用"></a>3.区块引用</h4><ul><li>在段落的第一行最前面加”&gt;”</li></ul><blockquote><p>一旦您完成了技术文章，您将复制和粘贴您的源代码很多次，以至于很难分辨所有代码是否都是最新的<br> ，甚至更难分辨您的代码和帖子文本是否在其中。同步。</p></blockquote><p><code>&gt;一旦您完成了技术文章，您将复制和粘贴您的源代码很多次，以至于很难分辨所有代码是否都是最新的， 甚至更难分辨您的代码和帖子文本是否在其中。同步。</code></p><ul><li>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</li></ul><blockquote><p>一旦您完成了技术文章，您将复制和粘贴您的源代码很多次，</p><blockquote><p>以至于很难分辨所有代码是否都是最新的，甚至更难分辨您的代码和帖子文本是否在其中。同步。</p></blockquote></blockquote><p><code>&gt;一旦您完成了技术文章，您将复制和粘贴您的源代码很多次，</code><br><code>&gt;&gt;以至于很难分辨所有代码是否都是最新的，甚至更难分辨您的代码和帖子文本是否在其中。同步。</code></p><ul><li>区块内也可以套用其他的 Markdown 语法，包括加粗、列表、代码区块等：</li></ul><blockquote><p><strong>日常生活</strong></p><ul><li>吃饭</li><li>睡觉</li><li>打豆豆</li></ul></blockquote><p><code>&gt;**日常生活**</code><br><code>&gt;* 吃饭</code><br><code>&gt;* 睡觉</code><br><code>&gt;* 打豆豆</code></p><h4 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a>4.列表</h4><p>Markdown 支持有序列表和无序列表。</p><ul><li>无序列表使用星号、加号或是减号作为列表标记，效果一样：</li><li>有序列表则使用数字接着一个英文句点：</li></ul><h4 id="5-代码区块"><a href="#5-代码区块" class="headerlink" title="5.代码区块"></a>5.代码区块</h4><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，如上列子：</p><h4 id="6-分隔线"><a href="#6-分隔线" class="headerlink" title="6.分隔线"></a>6.分隔线</h4><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：<br>    ***<br>    —<br>    * * *</p><span id="more"></span><h3 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h3><h4 id="1-链接"><a href="#1-链接" class="headerlink" title="1.链接"></a>1.链接</h4><p>方块括号后面紧接着圆括号并插入网址链接即可，例如：<br>我的博客地址：<a href="https://xuhuay007.github.io/">xuhuay007</a><br><code>[xuhuay007](https://xuhuay007.github.io/)</code></p><h4 id="2-强调"><a href="#2-强调" class="headerlink" title="2.强调"></a>2.强调</h4><p>Markdown 使用星号（*）和底线（_）作为标记强调字词的符号</p><ul><li><em>斜体</em><br><code>*斜体*</code></li><li><strong>粗体</strong><br><code>**粗体**</code></li><li><del>删除线</del><br><code>~~删除线~~</code></li><li>空格<br>  　　Markdown语法会忽略首行开头的空格，如果要体现出首行开头空两个的效果，可以使用 全角符号下的空格 ，windows下使用 shift+空格 切换。</li></ul><h4 id="3-行内标记"><a href="#3-行内标记" class="headerlink" title="3.行内标记"></a>3.行内标记</h4><p>行内标记用反引号把它包起来``，例如：<br>山间的<code>花儿</code>行走在大山间</p><p><code>山间的`花儿`行走在大山间</code></p><h4 id="4-插入图片"><a href="#4-插入图片" class="headerlink" title="4.插入图片"></a>4.插入图片</h4><p>简书在线编辑器和马克飞象都支持直接导入本地图片和从粘贴板粘贴!!!</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="1-反斜杠"><a href="#1-反斜杠" class="headerlink" title="1.反斜杠"></a>1.反斜杠</h4><p>Markdown可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果，你可以在星号的前面加上反斜杠：</p><p>*强调*</p><p><code>\*强调*</code></p><h4 id="2-自动邮箱链接"><a href="#2-自动邮箱链接" class="headerlink" title="2.自动邮箱链接"></a>2.自动邮箱链接</h4><p>Markdown支持以比较简短的自动链接形式来处理电子邮件信箱，例如：<br>给我发邮件，欢迎骚扰 <a href="mailto:xxx@163.com">xxx@163.com</a><br>    <code>&lt;xxx@163.com&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css实用技巧</title>
      <link href="/2018/09/24/css-shi-yong-ji-qiao/"/>
      <url>/2018/09/24/css-shi-yong-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h3 id="自适应技巧-—-Transform让百分比宽高布局元素水平垂直居中"><a href="#自适应技巧-—-Transform让百分比宽高布局元素水平垂直居中" class="headerlink" title="自适应技巧 — Transform让百分比宽高布局元素水平垂直居中"></a>自适应技巧 — Transform让百分比宽高布局元素水平垂直居中</h3><p>很早以前了解过当元素是固定宽度和高度的时候，水平垂直高居中的方法可以设置margin的负值来使其居中，这个负值是元素的宽和高的一半，比如宽高是100px，那么就用margin-left:-50px;margin-top:-50px这样的写法。但如果这个元素的宽高是用百分比表示呢？</p><p>如果使用百分比来设置宽高的话，以前哪个负值方法已经用不上了，这个我们发现在一个小的窍门，就是使用CSS3中的transform的translate转换属性。下面来看代码实例：</p><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>您可以尝试改变浏览器大小，这个元素依然是水平垂直居中的哦！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a>CSS代码</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.center</span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>30%<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span>#393<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你直接复制代码无法使用，请添加-webkit-transform或-moz-transform前缀，<br>使用-prefix-free这个插件，插件作用就是不需要输入-moz-和-webkit-这些前缀。</p><blockquote><p>想查看transform对浏览器的兼容，请浏览：<a href="http://caniuse.com/transforms3d">http://caniuse.com/transforms3d</a></p></blockquote><h3 id="多行文本垂直居中"><a href="#多行文本垂直居中" class="headerlink" title="多行文本垂直居中"></a>多行文本垂直居中</h3><p>父元素 设置：display:table,height:500px;<br>子元素 设置：dispaly:table-cell;vertical-align:middle;</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>垂直居中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.parent</span> <span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>500px<span class="token punctuation">}</span><span class="token selector">.child</span> <span class="token punctuation">{</span>    <span class="token property">dispaly</span><span class="token punctuation">:</span>table-cell<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span>middle<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>父级 display: flex;align-items: center;justify-content: center;<br>子级 固定宽高<br>(缺点: 部分ie浏览器不支持)</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>垂直居中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.parent</span> <span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.child</span> <span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="webkit表单输入框placeholder的颜色值改变"><a href="#webkit表单输入框placeholder的颜色值改变" class="headerlink" title="webkit表单输入框placeholder的颜色值改变"></a>webkit表单输入框placeholder的颜色值改变</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*如果想要默认的颜色显示红色，代码如下：*/</span><span class="token selector">input::-webkit-input-placeholder</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*如果想要用户点击变为蓝色，代码如下：*/</span><span class="token selector">input:focus::-webkit-input-placeholder</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">word-break</span><span class="token punctuation">:</span>break-all<span class="token punctuation">;</span>只对英文起作用，以字母作为换行依据<span class="token property">word-wrap</span><span class="token punctuation">:</span>break-word<span class="token punctuation">;</span>只对英文起作用，以单词作为换行依据<span class="token property">white-space</span><span class="token punctuation">:</span>pre-wrap<span class="token punctuation">;</span>只对中文起作用，强制换行<span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span>都起作用，强制不换行<span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span>不换行超出部分显示…<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常用自定义类名"><a href="#常用自定义类名" class="headerlink" title="常用自定义类名"></a>常用自定义类名</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*自动换行*/</span><span class="token selector">.cut-text</span> <span class="token punctuation">{</span>    <span class="token property">word-break</span><span class="token punctuation">:</span>break-all<span class="token punctuation">;</span>    <span class="token property">word-wrap</span><span class="token punctuation">:</span>break-word<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*强制不换行*/</span><span class="token selector">.no-cut-text</span> <span class="token punctuation">{</span>    <span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*英文换行*/</span><span class="token selector">.en-cut-text</span>  <span class="token punctuation">{</span>    <span class="token property">word-break</span><span class="token punctuation">:</span>break-all<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*超出显示...*/</span><span class="token selector">.text-dots</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span>    <span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*超出两行文本显示...*/</span> <span class="token comment">/*必须指定width*/</span><span class="token selector">.text2LineRestrist</span> <span class="token punctuation">{</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span>-webkit-box<span class="token punctuation">;</span>    <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span>vertical<span class="token punctuation">;</span>    <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span>2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*超出三行文本显示...*/</span> <span class="token comment">/*必须指定width*/</span><span class="token selector">.text3LineRestrist</span> <span class="token punctuation">{</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">text-overflow</span><span class="token punctuation">:</span>ellipsis<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span>-webkit-box<span class="token punctuation">;</span>    <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span>vertical<span class="token punctuation">;</span>    <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span>3<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.clearfix</span> <span class="token punctuation">{</span><span class="token property">zoom</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.clearfix::after,.clearfix::before</span><span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
